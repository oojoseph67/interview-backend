var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/guards/AccessTokenGuard.html",[0,1.867,1,1.867]],["body/guards/AccessTokenGuard.html",[1,2.005,2,1.683,3,0.287,4,0.287,5,0.255,6,2.41,7,2.012,8,1.495,9,0.357,10,1.393,11,1.666,12,4.094,13,2.351,14,4.136,15,1.658,16,1.936,17,4.293,18,3.002,19,2.658,20,1.011,21,2.319,22,1.815,23,0.033,24,1.41,25,1.055,26,1.532,27,2.887,28,3.328,29,2.319,30,2.887,31,1.393,32,2.229,33,2.319,34,2.005,35,2.319,36,0.637,37,1.495,38,1.344,39,1.219,40,1,41,0.567,42,1.018,43,1.495,44,4.572,45,1.936,46,1.936,47,1.683,48,1.344,49,1.936,50,0.512,51,1.673,52,1.683,53,0.617,54,1.818,55,1.683,56,3.002,57,1.495,58,1.299,59,2.319,60,2.319,61,2.319,62,2.319,63,0.011,64,1.683,65,2.229,66,1.936,67,1.936,68,1.936,69,1.495,70,1.344,71,1.936,72,2.319,73,3.175,74,2.319,75,1.179,76,2.319,77,2.319,78,2.319,79,1.936,80,2.319,81,2.319,82,2.319,83,2.319,84,2.005,85,1.818,86,2.319,87,1.936,88,2.51,89,1.683,90,2.51,91,1.111,92,2.319,93,1.683,94,1.936,95,1.683,96,1.936,97,1.683,98,1.936,99,2.319,100,1.518,101,1.936,102,1.683,103,2.229,104,1.936,105,1.683,106,1.683,107,0.671,108,0.017,109,0.017]],["title/controllers/AiController.html",[110,1.544,111,2.076]],["body/controllers/AiController.html",[3,0.248,4,0.248,5,0.22,6,1.053,7,0.879,9,0.308,10,1.246,11,1.523,20,0.924,22,1.358,23,0.032,24,1.055,25,1.074,26,1.146,31,1.852,36,0.692,41,0.49,50,0.248,53,1.392,54,2.663,58,1.444,63,0.01,75,1.657,91,0.96,107,1.405,108,0.015,109,0.015,110,0.96,111,1.994,112,0.96,113,1.672,114,1.672,115,2.041,116,1.812,117,3.156,118,3.087,119,1.672,120,2.039,121,1.659,122,3.094,123,2.003,124,1.626,125,2.583,126,2.508,127,3.094,128,4.253,129,1.852,130,3.094,131,3.55,132,2.003,133,2.003,134,2.583,135,2.003,136,2.329,137,3.094,138,2.003,139,2.583,140,2.246,141,2.246,142,2.583,143,2.003,144,2.003,145,3.094,146,2.003,147,3.55,148,2.003,149,2.583,150,2.583,151,3.087,152,1.161,153,2.003,154,1.291,155,1.454,156,3.55,157,2.003,158,2.003,159,2.003,160,1.987,161,1.672,162,2.583,163,1.291,164,1.626,165,1.053,166,1.672,167,1.672,168,1.291,169,0.96,170,1.161,171,1.672,172,2.745,173,1.454,174,2.003,175,1.291,176,1.672,177,3.55,178,3.55,179,3.781,180,0.683,181,1.053,182,2.246,183,1.454,184,1.483,185,1.291,186,2.003,187,2.003,188,1.454,189,1.291,190,3.156,191,3.156,192,2.003,193,1.672,194,2.003,195,2.003,196,2.003,197,2.003,198,2.192,199,2.003,200,2.003,201,2.003,202,2.583,203,2.003,204,2.003,205,2.003,206,2.003]],["title/modules/AiModule.html",[207,1.298,208,1.867]],["body/modules/AiModule.html",[3,0.42,4,0.42,5,0.372,23,0.032,24,1.543,36,0.737,41,0.828,50,0.42,63,0.016,108,0.022,109,0.022,111,3.282,112,2.168,116,2.791,124,1.781,129,1.365,160,3.061,161,2.829,181,1.781,182,3.283,183,2.46,184,1.624,185,2.184,207,2.051,208,3.501,209,1.624,210,1.781,211,2.184,212,2.184,213,1.781,214,3.282,215,1.964,216,2.829,217,2.829,218,2.916,219,2.184,220,2.184,221,3.389,222,3.389,223,2.46,224,1.365,225,2.916,226,2.916,227,2.184,228,2.184,229,2.829,230,3.389,231,2.377,232,3.389]],["title/classes/AiResponse.html",[63,0.015,184,1.544]],["body/classes/AiResponse.html",[3,0.353,4,0.353,5,0.313,9,0.439,20,1.136,23,0.032,25,1.209,36,0.576,50,0.576,51,0.971,58,1.82,63,0.014,100,2.215,107,1.344,108,0.02,109,0.02,121,2.04,126,2.42,129,1.617,141,3.664,142,3.35,152,2.695,180,0.971,184,1.924,198,2.327,224,1.147,225,1.835,231,2.11,233,1.147,234,2.926,235,1.835,236,1.369,237,4.443,238,3.881,239,3.881,240,2.443,241,2.587,242,4.014,243,2.647,244,2.377,245,3.664,246,2.847,247,4.214,248,3.35,249,3.35,250,3.35,251,2.847,252,2.587,253,2.847,254,4.014,255,2.847,256,2.847,257,3.664,258,2.067,259,2.914,260,2.587,261,1.365,262,2.653,263,1.65,264,2.377,265,2.847,266,2.067,267,2.377,268,2.067,269,2.847,270,2.377,271,2.067,272,2.377]],["title/injectables/AiService.html",[40,0.931,160,1.693]],["body/injectables/AiService.html",[3,0.258,4,0.258,5,0.229,6,1.095,7,0.914,9,0.321,10,1.285,11,2.189,13,1.858,15,1.529,20,1.062,22,1.701,23,0.033,24,1.322,25,0.795,26,1.436,31,1.886,32,2.799,36,0.687,37,2.056,38,1.208,40,0.922,41,0.509,50,0.258,51,1.481,53,1.367,54,2.701,56,2.813,63,0.01,75,1.752,84,1.208,85,2.037,88,1.512,91,2.366,108,0.016,109,0.016,115,1.989,116,2.463,117,3.907,118,3.152,119,1.739,120,2.081,124,1.095,126,1.529,129,1.886,134,2.662,136,2.081,154,1.343,160,1.676,162,2.662,163,1.343,164,1.676,165,1.095,166,1.739,167,1.739,168,1.343,175,1.343,181,2.037,182,2.315,183,1.512,184,1.858,185,1.343,189,2.056,198,2.246,202,1.739,224,0.839,227,1.343,261,0.999,273,1.095,274,1.739,275,2.083,276,3.73,277,3.875,278,3.875,279,2.083,280,3.189,281,2.083,282,2.083,283,2.083,284,2.083,285,1.739,286,2.083,287,2.083,288,1.512,289,1.739,290,2.083,291,2.056,292,3.189,293,2.083,294,2.083,295,1.512,296,2.083,297,3.189,298,2.083,299,2.083,300,2.083,301,2.083,302,2.083,303,2.083,304,2.083,305,2.083,306,2.083,307,2.083,308,2.083,309,4.342,310,2.083,311,2.083,312,2.083,313,2.083,314,2.083]],["title/classes/AiSurvey.html",[63,0.015,181,1.693]],["body/classes/AiSurvey.html",[3,0.29,4,0.29,5,0.257,9,0.36,20,1.203,23,0.032,25,1.268,26,1.289,36,0.61,50,0.515,51,0.798,53,1.422,58,1.724,63,0.011,70,1.356,100,2.021,107,1.423,108,0.017,109,0.017,115,0.942,121,2.16,126,2.778,129,1.983,140,3.573,152,2.853,180,0.798,181,1.829,184,2.359,185,1.508,224,0.942,226,1.508,231,2.185,233,0.942,234,2.991,236,1.187,238,3.47,240,2.587,241,2.968,243,2.473,244,2.905,245,3.342,247,3.843,248,2.905,249,2.905,250,2.905,252,2.243,257,3.745,258,1.698,259,2.526,260,2.243,261,1.121,262,2.712,263,1.356,266,1.698,268,1.698,270,1.952,291,3.173,295,3.017,315,1.508,316,4.604,317,2.339,318,2.339,319,2.339,320,2.339,321,2.905,322,2.905,323,2.339,324,2.339,325,2.339,326,2.339,327,2.339,328,2.339,329,1.952,330,3.481,331,3.481,332,2.339,333,1.698,334,1.952]],["title/controllers/AppController.html",[110,1.544,335,2.076]],["body/controllers/AppController.html",[3,0.537,4,0.537,5,0.476,23,0.032,36,0.656,41,1.06,50,0.537,58,1.361,63,0.021,75,1.478,108,0.026,109,0.026,110,2.538,112,2.077,188,3.146,189,2.794,335,3.413,336,3.618,337,3.005,338,3.618,339,3.618,340,4.334]],["title/modules/AppModule.html",[207,1.298,341,2.076]],["body/modules/AppModule.html",[0,2.189,1,2.815,3,0.324,4,0.324,5,0.287,7,1.147,11,1.053,23,0.033,36,0.756,39,1.374,41,0.639,42,1.147,48,1.515,50,0.324,51,0.892,63,0.013,100,1.946,108,0.019,109,0.019,112,1.81,175,1.685,207,1.786,208,3.112,209,1.253,210,1.374,211,1.685,212,1.685,213,1.374,214,2.858,215,1.515,218,2.434,219,1.685,220,1.685,223,1.898,224,1.053,228,2.858,335,2.858,337,2.821,338,2.182,341,3.867,342,2.182,343,2.182,344,2.182,345,3.112,346,2.821,347,1.898,348,2.614,349,2.741,350,4.054,351,2.614,352,3.153,353,2.614,354,3.777,355,2.614,356,2.614,357,2.614,358,2.614,359,2.434,360,2.614,361,3.777,362,1.898,363,2.614,364,1.898,365,3.218,366,2.182,367,2.741,368,2.614,369,2.614,370,2.614,371,2.614,372,2.614,373,2.614,374,1.898,375,2.614,376,2.182,377,2.614,378,2.614,379,2.614,380,2.614,381,1.898,382,1.898,383,2.182,384,2.614,385,3.777,386,2.614,387,2.614]],["title/injectables/AppService.html",[40,0.931,337,1.693]],["body/injectables/AppService.html",[3,0.541,4,0.541,5,0.48,9,0.673,10,2.143,20,1.068,23,0.032,31,1.76,36,0.541,40,1.538,41,1.068,50,0.541,58,1.671,63,0.021,75,1.49,108,0.026,109,0.026,273,2.296,337,2.796,339,4.983,388,3.647,389,4.369,390,4.369,391,4.369]],["title/guards/AuthenticationGuard.html",[0,1.867,359,2.076]],["body/guards/AuthenticationGuard.html",[0,1.35,1,3.093,2,3.74,3,0.289,4,0.289,5,0.256,7,1.022,9,0.359,10,1.398,11,1.67,12,4.893,13,2.469,15,1.663,20,0.848,22,1.522,23,0.033,24,1.183,25,0.943,26,1.285,27,2.896,28,3.335,30,1.944,31,1.398,32,2.236,36,0.609,37,1.501,38,1.35,40,1.003,41,0.569,46,1.944,47,1.69,50,0.289,51,1.567,63,0.011,64,1.69,65,2.236,66,1.944,67,1.944,68,1.944,75,1.183,84,2.663,85,2.179,87,1.944,88,3.01,91,1.116,100,1.522,103,1.501,104,1.944,105,1.69,106,1.69,107,0.673,108,0.017,109,0.017,169,2.202,170,2.011,171,1.944,175,1.501,236,0.794,241,1.501,288,2.518,359,2.236,362,1.69,392,1.944,393,3.469,394,3.469,395,3.469,396,2.329,397,5.484,398,2.329,399,2.329,400,1.944,401,2.518,402,3.469,403,2.329,404,2.329,405,2.329,406,1.944,407,1.944,408,2.896,409,4.146,410,2.896,411,2.329,412,2.329,413,2.329,414,2.329,415,2.329,416,2.329,417,2.329,418,3.469,419,2.329,420,2.329,421,2.329,422,2.329,423,2.329,424,1.944,425,3.469,426,1.944,427,2.329,428,2.329,429,3.469,430,2.329,431,2.329,432,2.329,433,2.329,434,3.469,435,2.329]],["title/classes/CreateAiResponseDto.html",[63,0.015,136,1.544]],["body/classes/CreateAiResponseDto.html",[3,0.419,4,0.419,5,0.371,9,0.52,20,1.103,23,0.032,25,1.113,36,0.63,50,0.419,58,1.776,63,0.024,70,1.958,100,1.981,107,1.305,108,0.022,109,0.022,115,2.048,121,1.981,126,2.601,129,1.818,136,2.164,152,1.958,180,1.152,198,2.616,233,1.361,236,1.539,237,4.72,239,4.243,240,2.373,241,2.91,243,2.601,262,2.672,264,2.82,266,2.452,267,2.82,268,2.452,329,2.82,436,3.69,437,2.82,438,3.378,439,3.378,440,4.514,441,3.378,442,3.378,443,3.378,444,2.82,445,3.69,446,4.514,447,3.768,448,2.177,449,3.378,450,2.82]],["title/classes/CreateAiSurveyDto.html",[63,0.015,120,1.544]],["body/classes/CreateAiSurveyDto.html",[3,0.476,4,0.476,5,0.422,9,0.592,20,0.94,23,0.032,25,0.789,36,0.609,50,0.476,58,1.7,63,0.024,100,1.687,107,1.111,108,0.024,109,0.024,115,1.979,120,2.354,121,1.687,126,2.594,129,1.548,180,1.311,233,1.548,236,1.675,240,2.02,243,2.354,262,2.582,291,3.799,321,4.1,322,4.1,436,3.565,445,3.929,447,4.518,448,2.478,450,3.209,451,3.209,452,3.844,453,3.844]],["title/injectables/GenerateQuestions.html",[40,0.931,116,1.544]],["body/injectables/GenerateQuestions.html",[3,0.244,4,0.244,5,0.216,9,0.303,10,1.231,11,1.945,13,2.314,15,0.944,19,1.142,20,1.115,22,1.642,23,0.033,24,1.276,25,0.991,26,1.386,31,1.507,32,2.718,34,1.771,36,0.565,37,2.412,38,1.142,39,1.035,40,0.883,41,0.482,42,0.865,50,0.244,51,1.775,53,0.813,58,1.516,63,0.009,75,1.646,84,1.771,85,1.967,89,2.218,91,1.464,102,2.218,103,2.412,108,0.015,109,0.015,116,2.187,118,3.06,124,1.606,129,0.794,141,2.218,150,2.55,151,1.43,188,1.43,227,3.112,236,1.042,273,1.035,276,2.218,288,1.43,291,2.412,350,4.03,352,1.644,454,4.03,455,1.644,456,4.345,457,3.055,458,1.97,459,3.055,460,1.97,461,1.97,462,3.055,463,1.97,464,4.563,465,1.97,466,2.55,467,1.97,468,1.644,469,3.055,470,1.97,471,1.97,472,1.97,473,4.563,474,2.55,475,1.97,476,1.97,477,3.055,478,1.97,479,3.055,480,3.055,481,3.055,482,3.055,483,3.055,484,3.055,485,2.55,486,1.97,487,1.97,488,1.97,489,3.055,490,3.055,491,3.055,492,3.055,493,4.216,494,3.742,495,3.742,496,3.055,497,3.742,498,1.97,499,1.97,500,3.055,501,3.055,502,3.055,503,3.055,504,1.97,505,1.97,506,1.97,507,1.97,508,1.97,509,1.97,510,1.97,511,1.97,512,1.97,513,1.97,514,1.97,515,1.97,516,1.97,517,1.97,518,1.97,519,1.97,520,1.97]],["title/injectables/GenerateTokenProvider.html",[40,0.931,521,1.693]],["body/injectables/GenerateTokenProvider.html",[3,0.309,4,0.309,5,0.274,9,0.384,10,1.47,11,2.127,13,2.423,15,1.75,16,2.082,17,4.408,18,3.133,19,2.754,20,1.055,22,2.085,23,0.032,24,1.472,25,1.148,26,1.599,31,1.47,34,2.754,36,0.626,39,1.311,40,1.055,41,0.61,42,1.095,43,1.608,48,2.116,49,2.082,50,0.309,51,1.245,53,1.405,55,1.811,56,3.133,57,1.608,63,0.012,65,2.353,69,1.608,70,1.446,71,2.082,73,1.446,75,1.245,90,3.448,91,2.277,93,1.811,94,2.082,95,1.811,96,2.082,97,1.811,98,2.082,108,0.018,109,0.018,124,1.311,154,2.353,273,1.311,295,3.669,382,1.811,521,1.918,522,3.965,523,2.082,524,4.317,525,3.603,526,5.055,527,2.494,528,2.494,529,2.494,530,3.65,531,2.494,532,2.494,533,1.608,534,2.494,535,2.494,536,4.408,537,2.494,538,2.082,539,3.65,540,2.494,541,2.494,542,3.65,543,3.65,544,2.494,545,3.65,546,2.494,547,2.494,548,2.494,549,2.494,550,2.494]],["title/controllers/GoogleAuthenticationController.html",[110,1.544,551,2.076]],["body/controllers/GoogleAuthenticationController.html",[3,0.382,4,0.382,5,0.338,9,0.475,10,1.708,13,1.477,15,1.477,20,0.753,22,1.352,23,0.032,24,1.051,25,0.995,26,1.141,31,1.241,36,0.701,38,1.786,41,0.753,50,0.382,53,1.506,63,0.015,73,3.028,75,1.051,107,1.511,108,0.021,109,0.021,110,1.477,112,1.477,114,2.572,121,1.352,131,3.54,149,3.54,155,3.078,156,4.361,169,1.477,170,1.786,176,2.572,177,3.54,178,4.048,180,1.051,190,2.572,191,3.54,381,3.078,533,1.986,538,3.54,551,2.734,552,2.734,553,2.572,554,2.504,555,4.241,556,3.081,557,3.028,558,3.081,559,3.078,560,3.081,561,3.081,562,4.241,563,4.241,564,4.241,565,3.081,566,3.081,567,2.572,568,2.572,569,2.549,570,2.572,571,3.081,572,3.081,573,3.081,574,3.081,575,3.081,576,3.081,577,3.081]],["title/modules/GoogleAuthenticationModule.html",[207,1.298,345,1.867]],["body/modules/GoogleAuthenticationModule.html",[3,0.4,4,0.4,5,0.355,23,0.032,24,1.101,36,0.759,41,0.789,42,1.416,48,1.871,50,0.4,53,0.859,63,0.015,108,0.022,109,0.022,112,2.098,207,2.001,209,1.547,210,1.696,211,2.08,212,2.08,213,1.696,214,3.202,215,1.871,218,2.822,219,2.08,220,2.08,223,2.343,224,1.3,228,2.822,229,2.694,231,1.696,345,3.549,346,3.018,349,2.343,364,2.343,374,2.343,521,3.018,533,2.08,551,3.202,552,2.08,554,2.098,569,3.018,570,2.694,578,2.694,579,2.694,580,3.228,581,3.228,582,3.228,583,2.694,584,3.228,585,2.822,586,2.694,587,2.694,588,3.228,589,3.228,590,3.228]],["title/injectables/GoogleAuthenticationService.html",[40,0.931,569,1.693]],["body/injectables/GoogleAuthenticationService.html",[3,0.28,4,0.28,5,0.248,9,0.348,10,1.367,11,1.641,13,2.442,15,1.627,19,2.625,20,1.107,22,1.489,23,0.033,24,1.157,25,0.996,26,1.257,31,1.367,34,1.967,36,0.689,39,1.188,40,0.981,41,0.553,42,0.992,50,0.28,51,1.802,53,1.205,55,1.641,57,2.187,63,0.011,64,1.641,65,1.457,69,1.457,73,2.625,75,1.157,79,1.887,84,1.311,85,1.784,89,1.641,90,2.957,91,1.953,102,1.641,103,2.187,105,1.641,106,1.641,107,0.654,108,0.017,109,0.017,154,1.457,169,1.084,189,2.187,224,0.911,236,1.157,261,1.084,273,1.188,276,3.287,285,1.887,521,2.38,525,3.401,533,1.457,552,3.128,554,1.627,557,1.967,559,2.957,567,1.887,568,1.887,569,1.784,583,1.887,586,1.887,587,1.887,591,1.887,592,4.074,593,5.095,594,2.261,595,4.074,596,4.074,597,3.394,598,3.394,599,2.261,600,2.261,601,2.261,602,2.261,603,4.528,604,2.261,605,2.261,606,1.887,607,2.261,608,2.261,609,2.261,610,2.261,611,2.261,612,2.261,613,3.394,614,2.261,615,3.394,616,2.261,617,2.261,618,2.261,619,2.261,620,2.261,621,2.261,622,2.261,623,2.261,624,2.261,625,2.261,626,3.779,627,3.394,628,3.394,629,4.074,630,2.261,631,3.394,632,2.261,633,1.887,634,1.887,635,2.261]],["title/classes/GoogleTokenDto.html",[63,0.015,557,1.867]],["body/classes/GoogleTokenDto.html",[3,0.501,4,0.501,5,0.444,9,0.623,20,0.989,23,0.032,25,0.83,36,0.628,50,0.501,58,1.593,63,0.024,73,2.94,107,1.169,108,0.025,109,0.025,121,1.775,180,1.379,233,1.629,236,1.73,240,2.126,243,2.431,262,2.666,400,4.234,445,3.682,448,2.607,554,2.431,557,2.94,636,4.234,637,3.376,638,5.541,639,4.234,640,4.044,641,4.044,642,4.044]],["title/modules/JwtAuthModule.html",[207,1.298,346,1.693]],["body/modules/JwtAuthModule.html",[3,0.49,4,0.49,5,0.434,11,1.594,18,2.871,19,2.899,23,0.032,36,0.714,39,2.079,41,0.967,42,1.736,43,2.55,48,2.293,50,0.49,63,0.019,93,2.871,95,2.871,97,2.871,108,0.025,109,0.025,207,2.015,209,1.896,215,2.293,228,3.224,346,2.629,349,2.871,364,2.871,374,3.631,376,3.302,536,3.302,643,3.956,644,5.002,645,3.956,646,3.956,647,3.956,648,3.956,649,3.956,650,3.956,651,3.956]],["title/classes/UpdateAiResponseDto.html",[63,0.015,165,1.693]],["body/classes/UpdateAiResponseDto.html",[3,0.531,4,0.531,5,0.47,23,0.032,36,0.705,50,0.651,63,0.025,108,0.026,109,0.026,115,2.117,120,2.053,136,2.053,163,2.761,164,2.251,165,2.763,168,2.761,180,1.461,233,1.725,263,3.296,652,3.109,653,3.109,654,4.387,655,3.575,656,4.387,657,3.575]],["title/classes/UpdateAiSurveyDto.html",[63,0.015,164,1.693]],["body/classes/UpdateAiSurveyDto.html",[3,0.531,4,0.531,5,0.47,23,0.032,36,0.705,50,0.651,63,0.025,108,0.026,109,0.026,115,2.117,120,2.053,136,2.053,163,2.761,164,2.763,165,2.251,168,2.761,180,1.461,233,1.725,263,3.296,652,3.109,653,3.109,654,3.575,655,3.575,656,4.387,657,4.387]],["title/classes/User.html",[53,0.857,63,0.015]],["body/classes/User.html",[3,0.334,4,0.334,5,0.296,9,0.416,20,1.205,23,0.032,24,1.681,25,1.194,26,1.431,36,0.559,50,0.559,51,0.92,53,1.571,57,3.362,58,1.95,63,0.013,100,2.381,107,1.425,108,0.019,109,0.019,121,2.163,180,0.92,198,2.24,224,1.087,231,2.031,233,1.087,236,1.318,240,2.59,243,2.739,245,4.148,252,2.491,257,3.786,258,1.959,259,2.805,260,2.491,261,1.294,262,2.741,263,1.564,554,1.852,585,1.74,626,3.768,633,3.768,634,3.768,658,1.74,659,3.864,660,2.699,661,2.699,662,3.864,663,2.699,664,2.699,665,3.864,666,2.699,667,2.699,668,3.864,669,3.864,670,2.699,671,2.699,672,2.699,673,2.699,674,2.699,675,2.699,676,1.959,677,2.253]],["title/coverage.html",[678,3.173]],["body/coverage.html",[0,2.109,1,1.439,5,0.273,6,2.263,7,1.889,8,2.775,23,0.032,25,1.035,40,1.459,52,1.802,53,0.661,54,1.305,63,0.027,85,1.305,108,0.018,109,0.018,110,2.064,111,1.6,113,2.073,115,1.465,116,1.19,120,1.19,136,1.19,160,1.305,164,1.305,165,1.305,169,1.19,172,1.802,173,1.802,181,1.305,184,1.19,213,1.305,225,1.6,226,1.6,227,1.6,234,3.056,235,2.775,271,1.802,274,2.073,315,2.775,333,1.802,335,1.6,336,2.073,337,1.305,347,1.802,359,1.6,365,1.802,388,2.073,392,2.073,401,1.802,436,2.641,437,2.073,451,2.073,454,2.073,455,2.073,521,1.305,522,2.073,523,2.073,551,1.6,552,2.345,553,2.073,557,1.439,569,1.305,585,1.6,591,2.073,636,2.073,637,2.073,652,2.641,653,2.641,658,2.775,676,1.802,678,1.802,679,2.073,680,2.483,681,2.483,682,6.428,683,4.305,684,4.74,685,2.483,686,4.74,687,6.134,688,5.586,689,4.74,690,3.638,691,2.073,692,2.641,693,2.483,694,2.483,695,2.073,696,2.483,697,2.483,698,2.483]],["title/dependencies.html",[210,2.033,699,2.255]],["body/dependencies.html",[23,0.032,41,0.92,42,1.652,43,2.426,45,3.142,47,2.732,63,0.023,108,0.024,109,0.024,169,1.804,180,1.284,210,1.978,224,1.516,261,1.804,362,2.732,406,3.142,407,3.142,444,3.142,448,2.426,456,3.142,466,3.142,468,3.142,554,1.804,606,3.142,700,3.764,701,3.764,702,3.764,703,4.846,704,3.764,705,3.764,706,3.764,707,3.764,708,3.764,709,3.764,710,3.764,711,3.764,712,3.764,713,3.764,714,3.764,715,3.764,716,3.764,717,3.764,718,3.764,719,3.764,720,3.764,721,3.764,722,3.764,723,3.764,724,3.764,725,3.764,726,3.764,727,3.764,728,3.764,729,3.764]],["title/miscellaneous/enumerations.html",[730,1.186,731,3.228]],["body/miscellaneous/enumerations.html",[9,0.732,23,0.03,108,0.028,109,0.028,170,3.243,692,3.449,730,2.085,731,3.966,732,3.966,733,5.594,734,4.669,735,5.594]],["title/miscellaneous/functions.html",[730,1.186,736,3.228]],["body/miscellaneous/functions.html",[9,0.755,23,0.028,108,0.028,109,0.028,213,3.165,695,4.091,730,2.151,736,4.091,737,4.901]],["title/index.html",[9,0.416,408,2.255,738,2.702]],["body/index.html",[23,0.031,53,0.649,63,0.012,69,1.572,70,1.413,107,0.705,108,0.018,109,0.018,115,2.182,124,2.239,125,3.922,126,2.719,129,2.018,139,2.035,140,3.411,147,2.996,151,3.411,155,3.092,193,2.035,231,1.282,243,2.252,261,1.169,289,2.035,367,1.77,381,3.803,382,1.77,383,2.035,426,2.035,554,2.252,559,1.77,639,3.556,678,1.77,679,4.882,739,3.59,740,5.239,741,2.438,742,2.438,743,3.59,744,2.438,745,2.438,746,4.26,747,2.438,748,2.438,749,2.438,750,3.59,751,2.438,752,2.438,753,4.26,754,2.438,755,2.438,756,3.59,757,3.59,758,2.438,759,2.438,760,2.438,761,3.59,762,2.438,763,3.59,764,2.438,765,3.59,766,4.26,767,3.59,768,2.438,769,2.438,770,2.438,771,4.26,772,2.438,773,3.59,774,2.438,775,2.438,776,2.438,777,4.26,778,2.438,779,2.035,780,2.438,781,2.438,782,3.59,783,4.699,784,2.438,785,2.438,786,2.438,787,2.438,788,3.59,789,2.438,790,1.77,791,2.438,792,2.438,793,2.438,794,5.673,795,2.438,796,2.438,797,5.558,798,2.438,799,2.438,800,3.59,801,2.438,802,2.438,803,2.438,804,3.59,805,2.438,806,2.438,807,2.438,808,2.438,809,2.438,810,2.438,811,2.438,812,2.438,813,2.438,814,2.438,815,2.035,816,2.438,817,2.438,818,2.438,819,2.035,820,2.438,821,2.438]],["title/modules.html",[209,2.095]],["body/modules.html",[23,0.027,108,0.027,109,0.027,208,2.695,209,2.229,341,2.997,345,2.695,346,2.444,779,4.918,822,5.892,823,5.892,824,6.095,825,4.649,826,4.649]],["title/overview.html",[790,3.173]],["body/overview.html",[2,2.659,23,0.031,108,0.024,109,0.024,112,1.756,116,2.535,160,2.78,207,1.475,208,3.512,209,1.756,210,1.925,211,2.361,212,2.361,213,1.925,214,2.361,215,2.123,216,3.057,217,3.057,218,3.069,219,2.361,220,2.361,233,1.475,273,1.925,337,2.78,341,4.037,342,3.057,343,3.057,344,3.057,345,3.599,346,2.944,424,3.057,474,3.057,485,3.057,521,2.78,569,2.78,578,3.057,579,3.057,790,2.659,827,3.663,828,3.663]],["title/properties.html",[236,1.319,699,2.255]],["body/properties.html",[23,0.031,107,1.398,108,0.028,109,0.028,236,1.649,815,4.036,819,4.036,829,4.835,830,4.835,831,4.835]],["title/miscellaneous/typealiases.html",[730,1.186,832,3.867]],["body/miscellaneous/typealiases.html",[6,2.324,7,1.941,8,3.455,9,0.681,23,0.026,25,1.1,34,2.563,54,2.817,108,0.026,109,0.026,234,3.107,235,3.455,260,3.717,271,3.89,315,3.455,333,3.89,658,2.851,676,3.89,730,1.941,833,4.422,834,4.474,835,3.692,836,3.692]],["title/miscellaneous/variables.html",[730,1.186,837,3.228]],["body/miscellaneous/variables.html",[6,1.732,7,1.446,8,2.862,9,0.508,23,0.032,25,0.911,28,2.393,44,2.751,51,1.514,52,3.223,53,1.336,54,2.334,58,1.394,75,1.514,101,2.751,108,0.022,109,0.022,152,1.911,169,2.128,170,2.574,172,3.223,173,2.393,225,2.862,226,2.862,234,2.574,235,2.862,252,3.869,272,2.751,315,2.862,334,2.751,347,2.393,365,3.223,366,2.751,367,2.393,401,3.223,410,3.706,585,2.862,658,2.125,677,2.751,691,3.706,692,2.393,730,1.446,732,3.706,734,5.011,834,3.706,835,2.751,836,2.751,837,2.751,838,3.296,839,3.296,840,3.296,841,4.44,842,3.296,843,3.296,844,3.296,845,3.296,846,3.296]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AiController.html":{},"modules/AiModule.html":{},"classes/AiResponse.html":{},"injectables/AiService.html":{},"classes/AiSurvey.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateAiResponseDto.html":{},"classes/CreateAiSurveyDto.html":{},"injectables/GenerateQuestions.html":{},"injectables/GenerateTokenProvider.html":{},"controllers/GoogleAuthenticationController.html":{},"modules/GoogleAuthenticationModule.html":{},"injectables/GoogleAuthenticationService.html":{},"classes/GoogleTokenDto.html":{},"modules/JwtAuthModule.html":{},"classes/UpdateAiResponseDto.html":{},"classes/UpdateAiSurveyDto.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":682,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":830,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":717,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":724,"title":{},"body":{"dependencies.html":{}}}],["0.3.20",{"_index":727,"title":{},"body":{"dependencies.html":{}}}],["0.39.0",{"_index":700,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":716,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":687,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":686,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":685,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":683,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":684,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":690,"title":{},"body":{"coverage.html":{}}}],["03",{"_index":250,"title":{},"body":{"classes/AiResponse.html":{},"classes/AiSurvey.html":{}}}],["1.1.26",{"_index":702,"title":{},"body":{"dependencies.html":{}}}],["1.8.4",{"_index":715,"title":{},"body":{"dependencies.html":{}}}],["1/4",{"_index":694,"title":{},"body":{"coverage.html":{}}}],["10.0.0",{"_index":703,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":713,"title":{},"body":{"dependencies.html":{}}}],["10.1.0",{"_index":708,"title":{},"body":{"dependencies.html":{}}}],["10.4.15",{"_index":710,"title":{},"body":{"dependencies.html":{}}}],["1024",{"_index":490,"title":{},"body":{"injectables/GenerateQuestions.html":{}}}],["11.0.0",{"_index":705,"title":{},"body":{"dependencies.html":{}}}],["11.0.4",{"_index":729,"title":{},"body":{"dependencies.html":{}}}],["123456789",{"_index":672,"title":{},"body":{"classes/User.html":{}}}],["123456789'})@prop({type",{"_index":666,"title":{},"body":{"classes/User.html":{}}}],["17.13.3",{"_index":720,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":424,"title":{},"body":{"guards/AuthenticationGuard.html":{},"overview.html":{}}}],["2.0.6",{"_index":707,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":149,"title":{},"body":{"controllers/AiController.html":{},"controllers/GoogleAuthenticationController.html":{}}}],["201",{"_index":128,"title":{},"body":{"controllers/AiController.html":{}}}],["2024",{"_index":249,"title":{},"body":{"classes/AiResponse.html":{},"classes/AiSurvey.html":{}}}],["20240229",{"_index":515,"title":{},"body":{"injectables/GenerateQuestions.html":{}}}],["20250219",{"_index":488,"title":{},"body":{"injectables/GenerateQuestions.html":{}}}],["20t10:00:00.000z",{"_index":332,"title":{},"body":{"classes/AiSurvey.html":{}}}],["20t10:00:00.000z'})@prop({type",{"_index":317,"title":{},"body":{"classes/AiSurvey.html":{}}}],["20t10:30:00.000z",{"_index":269,"title":{},"body":{"classes/AiResponse.html":{}}}],["20t10:30:00.000z'})@prop({type",{"_index":251,"title":{},"body":{"classes/AiResponse.html":{}}}],["25",{"_index":693,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":485,"title":{},"body":{"injectables/GenerateQuestions.html":{},"overview.html":{}}}],["4",{"_index":827,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":704,"title":{},"body":{"dependencies.html":{}}}],["4.89.0",{"_index":722,"title":{},"body":{"dependencies.html":{}}}],["401",{"_index":562,"title":{},"body":{"controllers/GoogleAuthenticationController.html":{}}}],["5",{"_index":474,"title":{},"body":{"injectables/GenerateQuestions.html":{},"overview.html":{}}}],["507f1f77bcf86cd799439011",{"_index":264,"title":{},"body":{"classes/AiResponse.html":{},"classes/CreateAiResponseDto.html":{}}}],["507f1f77bcf86cd799439011'})@isnotempty()@ismongoid",{"_index":441,"title":{},"body":{"classes/CreateAiResponseDto.html":{}}}],["507f1f77bcf86cd799439011'})@prop({type",{"_index":255,"title":{},"body":{"classes/AiResponse.html":{}}}],["7",{"_index":486,"title":{},"body":{"injectables/GenerateQuestions.html":{}}}],["7.8.1",{"_index":725,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":828,"title":{},"body":{"overview.html":{}}}],["8.1.0",{"_index":711,"title":{},"body":{"dependencies.html":{}}}],["8.9.3",{"_index":721,"title":{},"body":{"dependencies.html":{}}}],["9.15.1",{"_index":718,"title":{},"body":{"dependencies.html":{}}}],["_",{"_index":72,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["access",{"_index":400,"title":{},"body":{"guards/AuthenticationGuard.html":{},"classes/GoogleTokenDto.html":{}}}],["access_token",{"_index":638,"title":{},"body":{"classes/GoogleTokenDto.html":{}}}],["accesstoken",{"_index":542,"title":{},"body":{"injectables/GenerateTokenProvider.html":{}}}],["accesstokenguard",{"_index":1,"title":{"guards/AccessTokenGuard.html":{}},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["action",{"_index":309,"title":{},"body":{"injectables/AiService.html":{}}}],["activeuser",{"_index":172,"title":{},"body":{"controllers/AiController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["additional",{"_index":481,"title":{},"body":{"injectables/GenerateQuestions.html":{}}}],["address",{"_index":659,"title":{},"body":{"classes/User.html":{}}}],["ai",{"_index":115,"title":{},"body":{"controllers/AiController.html":{},"injectables/AiService.html":{},"classes/AiSurvey.html":{},"classes/CreateAiResponseDto.html":{},"classes/CreateAiSurveyDto.html":{},"classes/UpdateAiResponseDto.html":{},"classes/UpdateAiSurveyDto.html":{},"coverage.html":{},"index.html":{}}}],["ai.controller",{"_index":222,"title":{},"body":{"modules/AiModule.html":{}}}],["ai.dto",{"_index":167,"title":{},"body":{"controllers/AiController.html":{},"injectables/AiService.html":{}}}],["ai.dto.ts",{"_index":653,"title":{},"body":{"classes/UpdateAiResponseDto.html":{},"classes/UpdateAiSurveyDto.html":{},"coverage.html":{}}}],["ai.service",{"_index":161,"title":{},"body":{"controllers/AiController.html":{},"modules/AiModule.html":{}}}],["ai/ai.module",{"_index":351,"title":{},"body":{"modules/AppModule.html":{}}}],["ai/generate",{"_index":810,"title":{},"body":{"index.html":{}}}],["ai/respond",{"_index":811,"title":{},"body":{"index.html":{}}}],["ai/sdk",{"_index":468,"title":{},"body":{"injectables/GenerateQuestions.html":{},"dependencies.html":{}}}],["ai/suggest",{"_index":812,"title":{},"body":{"index.html":{}}}],["aicontroller",{"_index":111,"title":{"controllers/AiController.html":{}},"body":{"controllers/AiController.html":{},"modules/AiModule.html":{},"coverage.html":{}}}],["aimodule",{"_index":208,"title":{"modules/AiModule.html":{}},"body":{"modules/AiModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["airesponse",{"_index":184,"title":{"classes/AiResponse.html":{}},"body":{"controllers/AiController.html":{},"modules/AiModule.html":{},"classes/AiResponse.html":{},"injectables/AiService.html":{},"classes/AiSurvey.html":{},"coverage.html":{}}}],["airesponse.name",{"_index":230,"title":{},"body":{"modules/AiModule.html":{}}}],["airesponse.save",{"_index":306,"title":{},"body":{"injectables/AiService.html":{}}}],["airesponsedocument",{"_index":271,"title":{},"body":{"classes/AiResponse.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["airesponsemodel",{"_index":277,"title":{},"body":{"injectables/AiService.html":{}}}],["airesponseschema",{"_index":225,"title":{},"body":{"modules/AiModule.html":{},"classes/AiResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["airesponse})@apibearerauth",{"_index":143,"title":{},"body":{"controllers/AiController.html":{}}}],["aiservice",{"_index":160,"title":{"injectables/AiService.html":{}},"body":{"controllers/AiController.html":{},"modules/AiModule.html":{},"injectables/AiService.html":{},"coverage.html":{},"overview.html":{}}}],["aisurvey",{"_index":181,"title":{"classes/AiSurvey.html":{}},"body":{"controllers/AiController.html":{},"modules/AiModule.html":{},"injectables/AiService.html":{},"classes/AiSurvey.html":{},"coverage.html":{}}}],["aisurvey.name",{"_index":232,"title":{},"body":{"modules/AiModule.html":{}}}],["aisurvey.responses.push(airesponse",{"_index":307,"title":{},"body":{"injectables/AiService.html":{}}}],["aisurvey.save",{"_index":297,"title":{},"body":{"injectables/AiService.html":{}}}],["aisurvey.userid.tostring",{"_index":301,"title":{},"body":{"injectables/AiService.html":{}}}],["aisurveydocument",{"_index":333,"title":{},"body":{"classes/AiSurvey.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["aisurveymodel",{"_index":280,"title":{},"body":{"injectables/AiService.html":{}}}],["aisurveyschema",{"_index":226,"title":{},"body":{"modules/AiModule.html":{},"classes/AiSurvey.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["alias",{"_index":689,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":833,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["answer",{"_index":507,"title":{},"body":{"injectables/GenerateQuestions.html":{}}}],["answers",{"_index":237,"title":{},"body":{"classes/AiResponse.html":{},"classes/CreateAiResponseDto.html":{}}}],["anthropic",{"_index":456,"title":{},"body":{"injectables/GenerateQuestions.html":{},"dependencies.html":{}}}],["api",{"_index":740,"title":{},"body":{"index.html":{}}}],["apibearerauth",{"_index":179,"title":{},"body":{"controllers/AiController.html":{}}}],["apikey",{"_index":472,"title":{},"body":{"injectables/GenerateQuestions.html":{}}}],["apioperation",{"_index":177,"title":{},"body":{"controllers/AiController.html":{},"controllers/GoogleAuthenticationController.html":{}}}],["apiproperty",{"_index":262,"title":{},"body":{"classes/AiResponse.html":{},"classes/AiSurvey.html":{},"classes/CreateAiResponseDto.html":{},"classes/CreateAiSurveyDto.html":{},"classes/GoogleTokenDto.html":{},"classes/User.html":{}}}],["apiproperty({description",{"_index":240,"title":{},"body":{"classes/AiResponse.html":{},"classes/AiSurvey.html":{},"classes/CreateAiResponseDto.html":{},"classes/CreateAiSurveyDto.html":{},"classes/GoogleTokenDto.html":{},"classes/User.html":{}}}],["apiresponse",{"_index":178,"title":{},"body":{"controllers/AiController.html":{},"controllers/GoogleAuthenticationController.html":{}}}],["apitags",{"_index":176,"title":{},"body":{"controllers/AiController.html":{},"controllers/GoogleAuthenticationController.html":{}}}],["apitags('ai",{"_index":186,"title":{},"body":{"controllers/AiController.html":{}}}],["apitags('authentication",{"_index":572,"title":{},"body":{"controllers/GoogleAuthenticationController.html":{}}}],["app",{"_index":796,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":348,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":338,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_guard",{"_index":361,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":335,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applying",{"_index":386,"title":{},"body":{"modules/AppModule.html":{}}}],["appmodule",{"_index":341,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":337,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["architecture",{"_index":789,"title":{},"body":{"index.html":{}}}],["array",{"_index":241,"title":{},"body":{"classes/AiResponse.html":{},"classes/AiSurvey.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateAiResponseDto.html":{}}}],["async",{"_index":11,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AiController.html":{},"injectables/AiService.html":{},"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{},"injectables/GenerateQuestions.html":{},"injectables/GenerateTokenProvider.html":{},"injectables/GoogleAuthenticationService.html":{},"modules/JwtAuthModule.html":{}}}],["aud",{"_index":61,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["audience",{"_index":95,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/GenerateTokenProvider.html":{},"modules/JwtAuthModule.html":{}}}],["auth",{"_index":169,"title":{},"body":{"controllers/AiController.html":{},"guards/AuthenticationGuard.html":{},"controllers/GoogleAuthenticationController.html":{},"injectables/GoogleAuthenticationService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["auth(authtype.none",{"_index":575,"title":{},"body":{"controllers/GoogleAuthenticationController.html":{}}}],["auth/google",{"_index":356,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/guards/access",{"_index":358,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/guards/authentication/authentication.guard",{"_index":360,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/jwt.module",{"_index":363,"title":{},"body":{"modules/AppModule.html":{}}}],["auth_type_key",{"_index":401,"title":{},"body":{"guards/AuthenticationGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authenticate",{"_index":559,"title":{},"body":{"controllers/GoogleAuthenticationController.html":{},"injectables/GoogleAuthenticationService.html":{},"index.html":{}}}],["authenticate(undefined",{"_index":599,"title":{},"body":{"injectables/GoogleAuthenticationService.html":{}}}],["authenticated",{"_index":538,"title":{},"body":{"injectables/GenerateTokenProvider.html":{},"controllers/GoogleAuthenticationController.html":{}}}],["authentication",{"_index":381,"title":{},"body":{"modules/AppModule.html":{},"controllers/GoogleAuthenticationController.html":{},"index.html":{}}}],["authentication.controller",{"_index":582,"title":{},"body":{"modules/GoogleAuthenticationModule.html":{}}}],["authentication.controller.ts",{"_index":553,"title":{},"body":{"controllers/GoogleAuthenticationController.html":{},"coverage.html":{}}}],["authentication.controller.ts:28",{"_index":565,"title":{},"body":{"controllers/GoogleAuthenticationController.html":{}}}],["authentication.module",{"_index":357,"title":{},"body":{"modules/AppModule.html":{}}}],["authentication.module.ts",{"_index":581,"title":{},"body":{"modules/GoogleAuthenticationModule.html":{}}}],["authentication.service",{"_index":570,"title":{},"body":{"controllers/GoogleAuthenticationController.html":{},"modules/GoogleAuthenticationModule.html":{}}}],["authentication.service.ts",{"_index":591,"title":{},"body":{"injectables/GoogleAuthenticationService.html":{},"coverage.html":{}}}],["authentication.service.ts:19",{"_index":597,"title":{},"body":{"injectables/GoogleAuthenticationService.html":{}}}],["authentication.service.ts:33",{"_index":601,"title":{},"body":{"injectables/GoogleAuthenticationService.html":{}}}],["authentication.service.ts:44",{"_index":600,"title":{},"body":{"injectables/GoogleAuthenticationService.html":{}}}],["authenticationguard",{"_index":359,"title":{"guards/AuthenticationGuard.html":{}},"body":{"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["authenticationguard.defaultauthtype",{"_index":417,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["author",{"_index":815,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authtype",{"_index":170,"title":{},"body":{"controllers/AiController.html":{},"guards/AuthenticationGuard.html":{},"controllers/GoogleAuthenticationController.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["authtype.bearer",{"_index":402,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["authtype.none",{"_index":405,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["authtypeguardmap",{"_index":393,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["authtypes",{"_index":410,"title":{},"body":{"guards/AuthenticationGuard.html":{},"miscellaneous/variables.html":{}}}],["authtypes.map((type",{"_index":419,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["available",{"_index":826,"title":{},"body":{"modules.html":{}}}],["await",{"_index":91,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AiController.html":{},"injectables/AiService.html":{},"guards/AuthenticationGuard.html":{},"injectables/GenerateQuestions.html":{},"injectables/GenerateTokenProvider.html":{},"injectables/GoogleAuthenticationService.html":{}}}],["axios",{"_index":714,"title":{},"body":{"dependencies.html":{}}}],["backend",{"_index":775,"title":{},"body":{"index.html":{}}}],["based",{"_index":750,"title":{},"body":{"index.html":{}}}],["bearer",{"_index":733,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["belong",{"_index":304,"title":{},"body":{"injectables/AiService.html":{}}}],["belongs",{"_index":254,"title":{},"body":{"classes/AiResponse.html":{}}}],["body",{"_index":156,"title":{},"body":{"controllers/AiController.html":{},"controllers/GoogleAuthenticationController.html":{}}}],["boolean",{"_index":428,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["bootstrap",{"_index":213,"title":{},"body":{"modules/AiModule.html":{},"modules/AppModule.html":{},"modules/GoogleAuthenticationModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":824,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":779,"title":{},"body":{"index.html":{},"modules.html":{}}}],["built",{"_index":741,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":12,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{}}}],["canactivate(context",{"_index":27,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{}}}],["catch",{"_index":102,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/GenerateQuestions.html":{},"injectables/GoogleAuthenticationService.html":{}}}],["catch((error",{"_index":433,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["cause",{"_index":105,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"injectables/GoogleAuthenticationService.html":{}}}],["checking",{"_index":413,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["class",{"_index":63,"title":{"classes/AiResponse.html":{},"classes/AiSurvey.html":{},"classes/CreateAiResponseDto.html":{},"classes/CreateAiSurveyDto.html":{},"classes/GoogleTokenDto.html":{},"classes/UpdateAiResponseDto.html":{},"classes/UpdateAiSurveyDto.html":{},"classes/User.html":{}},"body":{"guards/AccessTokenGuard.html":{},"controllers/AiController.html":{},"modules/AiModule.html":{},"classes/AiResponse.html":{},"injectables/AiService.html":{},"classes/AiSurvey.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateAiResponseDto.html":{},"classes/CreateAiSurveyDto.html":{},"injectables/GenerateQuestions.html":{},"injectables/GenerateTokenProvider.html":{},"controllers/GoogleAuthenticationController.html":{},"modules/GoogleAuthenticationModule.html":{},"injectables/GoogleAuthenticationService.html":{},"classes/GoogleTokenDto.html":{},"modules/JwtAuthModule.html":{},"classes/UpdateAiResponseDto.html":{},"classes/UpdateAiSurveyDto.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{}}}],["classes",{"_index":233,"title":{},"body":{"classes/AiResponse.html":{},"classes/AiSurvey.html":{},"classes/CreateAiResponseDto.html":{},"classes/CreateAiSurveyDto.html":{},"classes/GoogleTokenDto.html":{},"classes/UpdateAiResponseDto.html":{},"classes/UpdateAiSurveyDto.html":{},"classes/User.html":{},"overview.html":{}}}],["claude",{"_index":484,"title":{},"body":{"injectables/GenerateQuestions.html":{}}}],["claude_ai_api_key",{"_index":469,"title":{},"body":{"injectables/GenerateQuestions.html":{}}}],["clientid",{"_index":613,"title":{},"body":{"injectables/GoogleAuthenticationService.html":{}}}],["clientsecret",{"_index":615,"title":{},"body":{"injectables/GoogleAuthenticationService.html":{}}}],["cluster_aimodule",{"_index":216,"title":{},"body":{"modules/AiModule.html":{},"overview.html":{}}}],["cluster_aimodule_providers",{"_index":217,"title":{},"body":{"modules/AiModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":342,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":343,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":344,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_googleauthenticationmodule",{"_index":578,"title":{},"body":{"modules/GoogleAuthenticationModule.html":{},"overview.html":{}}}],["cluster_googleauthenticationmodule_imports",{"_index":580,"title":{},"body":{"modules/GoogleAuthenticationModule.html":{}}}],["cluster_googleauthenticationmodule_providers",{"_index":579,"title":{},"body":{"modules/GoogleAuthenticationModule.html":{},"overview.html":{}}}],["codebase",{"_index":785,"title":{},"body":{"index.html":{}}}],["collect",{"_index":751,"title":{},"body":{"index.html":{}}}],["collecting",{"_index":747,"title":{},"body":{"index.html":{}}}],["commentary",{"_index":482,"title":{},"body":{"injectables/GenerateQuestions.html":{}}}],["compodoc",{"_index":783,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":701,"title":{},"body":{"dependencies.html":{}}}],["compodoc:serveapi",{"_index":809,"title":{},"body":{"index.html":{}}}],["component",{"_index":786,"title":{},"body":{"index.html":{}}}],["config",{"_index":608,"title":{},"body":{"injectables/GoogleAuthenticationService.html":{}}}],["config/database.config",{"_index":353,"title":{},"body":{"modules/AppModule.html":{}}}],["config/environmentvalidation",{"_index":355,"title":{},"body":{"modules/AppModule.html":{}}}],["config/google.config",{"_index":584,"title":{},"body":{"modules/GoogleAuthenticationModule.html":{}}}],["config/jwt.config",{"_index":364,"title":{},"body":{"modules/AppModule.html":{},"modules/GoogleAuthenticationModule.html":{},"modules/JwtAuthModule.html":{}}}],["configmodule",{"_index":349,"title":{},"body":{"modules/AppModule.html":{},"modules/GoogleAuthenticationModule.html":{},"modules/JwtAuthModule.html":{}}}],["configmodule.forfeature(googleconfig",{"_index":589,"title":{},"body":{"modules/GoogleAuthenticationModule.html":{}}}],["configmodule.forfeature(jwtconfig",{"_index":374,"title":{},"body":{"modules/AppModule.html":{},"modules/GoogleAuthenticationModule.html":{},"modules/JwtAuthModule.html":{}}}],["configmodule.forroot",{"_index":368,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":350,"title":{},"body":{"modules/AppModule.html":{},"injectables/GenerateQuestions.html":{}}}],["configservice.get('mongodb_uri",{"_index":378,"title":{},"body":{"modules/AppModule.html":{}}}],["configtype",{"_index":19,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/GenerateQuestions.html":{},"injectables/GenerateTokenProvider.html":{},"injectables/GoogleAuthenticationService.html":{},"modules/JwtAuthModule.html":{}}}],["configuration",{"_index":610,"title":{},"body":{"injectables/GoogleAuthenticationService.html":{}}}],["console.log",{"_index":288,"title":{},"body":{"injectables/AiService.html":{},"guards/AuthenticationGuard.html":{},"injectables/GenerateQuestions.html":{}}}],["console.log('canactivate",{"_index":432,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["console.log('guards",{"_index":421,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["console.log('inside",{"_index":82,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["const",{"_index":51,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/AiResponse.html":{},"injectables/AiService.html":{},"classes/AiSurvey.html":{},"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{},"injectables/GenerateQuestions.html":{},"injectables/GenerateTokenProvider.html":{},"injectables/GoogleAuthenticationService.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":15,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AiService.html":{},"guards/AuthenticationGuard.html":{},"injectables/GenerateQuestions.html":{},"injectables/GenerateTokenProvider.html":{},"controllers/GoogleAuthenticationController.html":{},"injectables/GoogleAuthenticationService.html":{}}}],["constructor(aisurveymodel",{"_index":275,"title":{},"body":{"injectables/AiService.html":{}}}],["constructor(configservice",{"_index":458,"title":{},"body":{"injectables/GenerateQuestions.html":{}}}],["constructor(googleconfiguration",{"_index":594,"title":{},"body":{"injectables/GoogleAuthenticationService.html":{}}}],["constructor(jwtservice",{"_index":16,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/GenerateTokenProvider.html":{}}}],["constructor(private",{"_index":188,"title":{},"body":{"controllers/AiController.html":{},"controllers/AppController.html":{},"injectables/GenerateQuestions.html":{}}}],["constructor(reflector",{"_index":396,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["content",{"_index":493,"title":{},"body":{"injectables/GenerateQuestions.html":{}}}],["context",{"_index":30,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{}}}],["context.getclass",{"_index":415,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["context.gethandler",{"_index":414,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":78,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["controller",{"_index":110,"title":{"controllers/AiController.html":{},"controllers/AppController.html":{},"controllers/GoogleAuthenticationController.html":{}},"body":{"controllers/AiController.html":{},"controllers/AppController.html":{},"controllers/GoogleAuthenticationController.html":{},"coverage.html":{}}}],["controller('ai",{"_index":187,"title":{},"body":{"controllers/AiController.html":{}}}],["controller('google",{"_index":573,"title":{},"body":{"controllers/GoogleAuthenticationController.html":{}}}],["controllers",{"_index":112,"title":{},"body":{"controllers/AiController.html":{},"modules/AiModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/GoogleAuthenticationController.html":{},"modules/GoogleAuthenticationModule.html":{},"overview.html":{}}}],["coverage",{"_index":678,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":656,"title":{},"body":{"classes/UpdateAiResponseDto.html":{},"classes/UpdateAiSurveyDto.html":{}}}],["createaidto",{"_index":134,"title":{},"body":{"controllers/AiController.html":{},"injectables/AiService.html":{}}}],["createaidto.title",{"_index":292,"title":{},"body":{"injectables/AiService.html":{}}}],["createairesponsedto",{"_index":136,"title":{"classes/CreateAiResponseDto.html":{}},"body":{"controllers/AiController.html":{},"injectables/AiService.html":{},"classes/CreateAiResponseDto.html":{},"classes/UpdateAiResponseDto.html":{},"classes/UpdateAiSurveyDto.html":{},"coverage.html":{}}}],["createaisurveydto",{"_index":120,"title":{"classes/CreateAiSurveyDto.html":{}},"body":{"controllers/AiController.html":{},"injectables/AiService.html":{},"classes/CreateAiSurveyDto.html":{},"classes/UpdateAiResponseDto.html":{},"classes/UpdateAiSurveyDto.html":{},"coverage.html":{}}}],["created",{"_index":316,"title":{},"body":{"classes/AiSurvey.html":{}}}],["createdat",{"_index":238,"title":{},"body":{"classes/AiResponse.html":{},"classes/AiSurvey.html":{}}}],["createparamdecorator",{"_index":840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createtoken",{"_index":524,"title":{},"body":{"injectables/GenerateTokenProvider.html":{}}}],["createtoken(undefined",{"_index":528,"title":{},"body":{"injectables/GenerateTokenProvider.html":{}}}],["ctx",{"_index":843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["customer",{"_index":321,"title":{},"body":{"classes/AiSurvey.html":{},"classes/CreateAiSurveyDto.html":{}}}],["d+\\./.test(line",{"_index":518,"title":{},"body":{"injectables/GenerateQuestions.html":{}}}],["data",{"_index":756,"title":{},"body":{"index.html":{}}}],["databaseconfig",{"_index":352,"title":{},"body":{"modules/AppModule.html":{},"injectables/GenerateQuestions.html":{}}}],["date",{"_index":247,"title":{},"body":{"classes/AiResponse.html":{},"classes/AiSurvey.html":{}}}],["date.now",{"_index":270,"title":{},"body":{"classes/AiResponse.html":{},"classes/AiSurvey.html":{}}}],["declarations",{"_index":212,"title":{},"body":{"modules/AiModule.html":{},"modules/AppModule.html":{},"modules/GoogleAuthenticationModule.html":{},"overview.html":{}}}],["decorator",{"_index":409,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["decorators",{"_index":121,"title":{},"body":{"controllers/AiController.html":{},"classes/AiResponse.html":{},"classes/AiSurvey.html":{},"classes/CreateAiResponseDto.html":{},"classes/CreateAiSurveyDto.html":{},"controllers/GoogleAuthenticationController.html":{},"classes/GoogleTokenDto.html":{},"classes/User.html":{}}}],["decorators/auth.decorator",{"_index":571,"title":{},"body":{"controllers/GoogleAuthenticationController.html":{}}}],["default",{"_index":252,"title":{},"body":{"classes/AiResponse.html":{},"classes/AiSurvey.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["defaultauthtype",{"_index":395,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["defined",{"_index":20,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AiController.html":{},"classes/AiResponse.html":{},"injectables/AiService.html":{},"classes/AiSurvey.html":{},"injectables/AppService.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateAiResponseDto.html":{},"classes/CreateAiSurveyDto.html":{},"injectables/GenerateQuestions.html":{},"injectables/GenerateTokenProvider.html":{},"controllers/GoogleAuthenticationController.html":{},"injectables/GoogleAuthenticationService.html":{},"classes/GoogleTokenDto.html":{},"classes/User.html":{}}}],["definitions",{"_index":781,"title":{},"body":{"index.html":{}}}],["delete",{"_index":159,"title":{},"body":{"controllers/AiController.html":{}}}],["delete(':id",{"_index":204,"title":{},"body":{"controllers/AiController.html":{}}}],["dependencies",{"_index":210,"title":{"dependencies.html":{}},"body":{"modules/AiModule.html":{},"modules/AppModule.html":{},"modules/GoogleAuthenticationModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":382,"title":{},"body":{"modules/AppModule.html":{},"injectables/GenerateTokenProvider.html":{},"index.html":{}}}],["description",{"_index":107,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AiController.html":{},"classes/AiResponse.html":{},"classes/AiSurvey.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateAiResponseDto.html":{},"classes/CreateAiSurveyDto.html":{},"controllers/GoogleAuthenticationController.html":{},"injectables/GoogleAuthenticationService.html":{},"classes/GoogleTokenDto.html":{},"classes/User.html":{},"index.html":{},"properties.html":{}}}],["detailed",{"_index":763,"title":{},"body":{"index.html":{}}}],["development",{"_index":367,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["directly",{"_index":778,"title":{},"body":{"index.html":{}}}],["document",{"_index":259,"title":{},"body":{"classes/AiResponse.html":{},"classes/AiSurvey.html":{},"classes/User.html":{}}}],["documentation",{"_index":679,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["doe",{"_index":669,"title":{},"body":{"classes/User.html":{}}}],["doesnt",{"_index":303,"title":{},"body":{"injectables/AiService.html":{}}}],["dto/create",{"_index":162,"title":{},"body":{"controllers/AiController.html":{},"injectables/AiService.html":{}}}],["dto/update",{"_index":166,"title":{},"body":{"controllers/AiController.html":{},"injectables/AiService.html":{}}}],["dtos/google",{"_index":567,"title":{},"body":{"controllers/GoogleAuthenticationController.html":{},"injectables/GoogleAuthenticationService.html":{}}}],["e2e",{"_index":805,"title":{},"body":{"index.html":{}}}],["each",{"_index":450,"title":{},"body":{"classes/CreateAiResponseDto.html":{},"classes/CreateAiSurveyDto.html":{}}}],["email",{"_index":57,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/GenerateTokenProvider.html":{},"injectables/GoogleAuthenticationService.html":{},"classes/User.html":{}}}],["endpoint",{"_index":764,"title":{},"body":{"index.html":{}}}],["endpoints",{"_index":746,"title":{},"body":{"index.html":{}}}],["entities/ai",{"_index":182,"title":{},"body":{"controllers/AiController.html":{},"modules/AiModule.html":{},"injectables/AiService.html":{}}}],["entities/user.entity",{"_index":533,"title":{},"body":{"injectables/GenerateTokenProvider.html":{},"controllers/GoogleAuthenticationController.html":{},"modules/GoogleAuthenticationModule.html":{},"injectables/GoogleAuthenticationService.html":{}}}],["enumerations",{"_index":731,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":365,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["env.${env",{"_index":371,"title":{},"body":{"modules/AppModule.html":{}}}],["envfilepath",{"_index":370,"title":{},"body":{"modules/AppModule.html":{}}}],["environment",{"_index":534,"title":{},"body":{"injectables/GenerateTokenProvider.html":{}}}],["environmentvalidation",{"_index":354,"title":{},"body":{"modules/AppModule.html":{}}}],["error",{"_index":103,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"injectables/GenerateQuestions.html":{},"injectables/GoogleAuthenticationService.html":{}}}],["error.message",{"_index":106,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"injectables/GoogleAuthenticationService.html":{}}}],["example",{"_index":243,"title":{},"body":{"classes/AiResponse.html":{},"classes/AiSurvey.html":{},"classes/CreateAiResponseDto.html":{},"classes/CreateAiSurveyDto.html":{},"classes/GoogleTokenDto.html":{},"classes/User.html":{},"index.html":{}}}],["examples",{"_index":766,"title":{},"body":{"index.html":{}}}],["excellent",{"_index":449,"title":{},"body":{"classes/CreateAiResponseDto.html":{}}}],["exception",{"_index":435,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["execution",{"_index":77,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["executioncontext",{"_index":28,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"miscellaneous/variables.html":{}}}],["existinguser",{"_index":629,"title":{},"body":{"injectables/GoogleAuthenticationService.html":{}}}],["exp",{"_index":60,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["expired",{"_index":564,"title":{},"body":{"controllers/GoogleAuthenticationController.html":{}}}],["expiresin",{"_index":536,"title":{},"body":{"injectables/GenerateTokenProvider.html":{},"modules/JwtAuthModule.html":{}}}],["export",{"_index":50,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AiController.html":{},"modules/AiModule.html":{},"classes/AiResponse.html":{},"injectables/AiService.html":{},"classes/AiSurvey.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateAiResponseDto.html":{},"classes/CreateAiSurveyDto.html":{},"injectables/GenerateQuestions.html":{},"injectables/GenerateTokenProvider.html":{},"controllers/GoogleAuthenticationController.html":{},"modules/GoogleAuthenticationModule.html":{},"injectables/GoogleAuthenticationService.html":{},"classes/GoogleTokenDto.html":{},"modules/JwtAuthModule.html":{},"classes/UpdateAiResponseDto.html":{},"classes/UpdateAiSurveyDto.html":{},"classes/User.html":{}}}],["exports",{"_index":215,"title":{},"body":{"modules/AiModule.html":{},"modules/AppModule.html":{},"modules/GoogleAuthenticationModule.html":{},"modules/JwtAuthModule.html":{},"overview.html":{}}}],["express",{"_index":45,"title":{},"body":{"guards/AccessTokenGuard.html":{},"dependencies.html":{}}}],["extends",{"_index":263,"title":{},"body":{"classes/AiResponse.html":{},"classes/AiSurvey.html":{},"classes/UpdateAiResponseDto.html":{},"classes/UpdateAiSurveyDto.html":{},"classes/User.html":{}}}],["extract",{"_index":79,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/GoogleAuthenticationService.html":{}}}],["extractrequestfromheader",{"_index":14,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["extractrequestfromheader(undefined",{"_index":33,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["failed",{"_index":501,"title":{},"body":{"injectables/GenerateQuestions.html":{}}}],["false",{"_index":674,"title":{},"body":{"classes/User.html":{}}}],["false})@prop({type",{"_index":670,"title":{},"body":{"classes/User.html":{}}}],["family_name",{"_index":628,"title":{},"body":{"injectables/GoogleAuthenticationService.html":{}}}],["features",{"_index":748,"title":{},"body":{"index.html":{}}}],["field",{"_index":841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AiController.html":{},"modules/AiModule.html":{},"classes/AiResponse.html":{},"injectables/AiService.html":{},"classes/AiSurvey.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateAiResponseDto.html":{},"classes/CreateAiSurveyDto.html":{},"injectables/GenerateQuestions.html":{},"injectables/GenerateTokenProvider.html":{},"controllers/GoogleAuthenticationController.html":{},"modules/GoogleAuthenticationModule.html":{},"injectables/GoogleAuthenticationService.html":{},"classes/GoogleTokenDto.html":{},"modules/JwtAuthModule.html":{},"classes/UpdateAiResponseDto.html":{},"classes/UpdateAiSurveyDto.html":{},"classes/User.html":{},"coverage.html":{}}}],["filter((line",{"_index":517,"title":{},"body":{"injectables/GenerateQuestions.html":{}}}],["findall",{"_index":308,"title":{},"body":{"injectables/AiService.html":{}}}],["findone(@param('id",{"_index":197,"title":{},"body":{"controllers/AiController.html":{}}}],["findone(id",{"_index":310,"title":{},"body":{"injectables/AiService.html":{}}}],["fire",{"_index":427,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["first",{"_index":662,"title":{},"body":{"classes/User.html":{}}}],["firstname",{"_index":633,"title":{},"body":{"injectables/GoogleAuthenticationService.html":{},"classes/User.html":{}}}],["flow",{"_index":780,"title":{},"body":{"index.html":{}}}],["formattedtext",{"_index":497,"title":{},"body":{"injectables/GenerateQuestions.html":{}}}],["forwardref",{"_index":604,"title":{},"body":{"injectables/GoogleAuthenticationService.html":{}}}],["function",{"_index":696,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":736,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generate",{"_index":124,"title":{},"body":{"controllers/AiController.html":{},"modules/AiModule.html":{},"injectables/AiService.html":{},"injectables/GenerateQuestions.html":{},"injectables/GenerateTokenProvider.html":{},"index.html":{}}}],["generated",{"_index":130,"title":{},"body":{"controllers/AiController.html":{}}}],["generatequestions",{"_index":116,"title":{"injectables/GenerateQuestions.html":{}},"body":{"controllers/AiController.html":{},"modules/AiModule.html":{},"injectables/AiService.html":{},"injectables/GenerateQuestions.html":{},"coverage.html":{},"overview.html":{}}}],["generatequestions(createaidto",{"_index":119,"title":{},"body":{"controllers/AiController.html":{},"injectables/AiService.html":{}}}],["generatequestions(undefined",{"_index":460,"title":{},"body":{"injectables/GenerateQuestions.html":{}}}],["generatequestionsprovider",{"_index":278,"title":{},"body":{"injectables/AiService.html":{}}}],["generatetoken",{"_index":596,"title":{},"body":{"injectables/GoogleAuthenticationService.html":{}}}],["generatetokenprovider",{"_index":521,"title":{"injectables/GenerateTokenProvider.html":{}},"body":{"injectables/GenerateTokenProvider.html":{},"modules/GoogleAuthenticationModule.html":{},"injectables/GoogleAuthenticationService.html":{},"coverage.html":{},"overview.html":{}}}],["generatetokens",{"_index":526,"title":{},"body":{"injectables/GenerateTokenProvider.html":{}}}],["generatetokens(undefined",{"_index":531,"title":{},"body":{"injectables/GenerateTokenProvider.html":{}}}],["generating",{"_index":289,"title":{},"body":{"injectables/AiService.html":{},"index.html":{}}}],["generation",{"_index":749,"title":{},"body":{"index.html":{}}}],["get(':id",{"_index":196,"title":{},"body":{"controllers/AiController.html":{}}}],["get('suggest",{"_index":145,"title":{},"body":{"controllers/AiController.html":{}}}],["gethello",{"_index":339,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":408,"title":{"index.html":{}},"body":{"guards/AuthenticationGuard.html":{}}}],["given_name",{"_index":627,"title":{},"body":{"injectables/GoogleAuthenticationService.html":{}}}],["global",{"_index":387,"title":{},"body":{"modules/AppModule.html":{}}}],["google",{"_index":554,"title":{},"body":{"controllers/GoogleAuthenticationController.html":{},"modules/GoogleAuthenticationModule.html":{},"injectables/GoogleAuthenticationService.html":{},"classes/GoogleTokenDto.html":{},"classes/User.html":{},"dependencies.html":{},"index.html":{}}}],["googleauthentication",{"_index":555,"title":{},"body":{"controllers/GoogleAuthenticationController.html":{}}}],["googleauthentication(@body",{"_index":576,"title":{},"body":{"controllers/GoogleAuthenticationController.html":{}}}],["googleauthentication(body",{"_index":556,"title":{},"body":{"controllers/GoogleAuthenticationController.html":{}}}],["googleauthenticationcontroller",{"_index":551,"title":{"controllers/GoogleAuthenticationController.html":{}},"body":{"controllers/GoogleAuthenticationController.html":{},"modules/GoogleAuthenticationModule.html":{},"coverage.html":{}}}],["googleauthenticationmodule",{"_index":345,"title":{"modules/GoogleAuthenticationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GoogleAuthenticationModule.html":{},"modules.html":{},"overview.html":{}}}],["googleauthenticationservice",{"_index":569,"title":{"injectables/GoogleAuthenticationService.html":{}},"body":{"controllers/GoogleAuthenticationController.html":{},"modules/GoogleAuthenticationModule.html":{},"injectables/GoogleAuthenticationService.html":{},"coverage.html":{},"overview.html":{}}}],["googleconfig",{"_index":583,"title":{},"body":{"modules/GoogleAuthenticationModule.html":{},"injectables/GoogleAuthenticationService.html":{}}}],["googleconfiguration",{"_index":598,"title":{},"body":{"injectables/GoogleAuthenticationService.html":{}}}],["googleid",{"_index":626,"title":{},"body":{"injectables/GoogleAuthenticationService.html":{},"classes/User.html":{}}}],["googletokendto",{"_index":557,"title":{"classes/GoogleTokenDto.html":{}},"body":{"controllers/GoogleAuthenticationController.html":{},"injectables/GoogleAuthenticationService.html":{},"classes/GoogleTokenDto.html":{},"coverage.html":{}}}],["graph",{"_index":825,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":0,"title":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{}},"body":{"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["guards",{"_index":2,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"overview.html":{}}}],["header",{"_index":80,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["hello",{"_index":390,"title":{},"body":{"injectables/AppService.html":{}}}],["help",{"_index":511,"title":{},"body":{"injectables/GenerateQuestions.html":{}}}],["here",{"_index":68,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{}}}],["http://localhost:8888/api",{"_index":772,"title":{},"body":{"index.html":{}}}],["http://localhost:8889",{"_index":784,"title":{},"body":{"index.html":{}}}],["httpcode",{"_index":566,"title":{},"body":{"controllers/GoogleAuthenticationController.html":{}}}],["httpcode(httpstatus.ok",{"_index":574,"title":{},"body":{"controllers/GoogleAuthenticationController.html":{}}}],["httpcode(httpstatus.ok)@auth(authtype.none)@post('')@apioperation({summary",{"_index":558,"title":{},"body":{"controllers/GoogleAuthenticationController.html":{}}}],["httpexception",{"_index":37,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AiService.html":{},"guards/AuthenticationGuard.html":{},"injectables/GenerateQuestions.html":{}}}],["httpexception('no",{"_index":86,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["httpexception('unauthorized",{"_index":434,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["httpexception(`${error.message",{"_index":104,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{}}}],["https://cytric",{"_index":774,"title":{},"body":{"index.html":{}}}],["https://github.com/oojoseph67",{"_index":818,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":38,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AiService.html":{},"guards/AuthenticationGuard.html":{},"injectables/GenerateQuestions.html":{},"controllers/GoogleAuthenticationController.html":{}}}],["httpstatus.bad_request",{"_index":502,"title":{},"body":{"injectables/GenerateQuestions.html":{}}}],["httpstatus.unauthorized",{"_index":88,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AiService.html":{},"guards/AuthenticationGuard.html":{}}}],["hydrateddocument",{"_index":260,"title":{},"body":{"classes/AiResponse.html":{},"classes/AiSurvey.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["iat",{"_index":59,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["id",{"_index":198,"title":{},"body":{"controllers/AiController.html":{},"classes/AiResponse.html":{},"injectables/AiService.html":{},"classes/CreateAiResponseDto.html":{},"classes/User.html":{}}}],["identifier",{"_index":680,"title":{},"body":{"coverage.html":{}}}],["idtoken",{"_index":623,"title":{},"body":{"injectables/GoogleAuthenticationService.html":{}}}],["ignoreexpiration",{"_index":99,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["implementations",{"_index":792,"title":{},"body":{"index.html":{}}}],["implements",{"_index":64,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"injectables/GoogleAuthenticationService.html":{}}}],["import",{"_index":36,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AiController.html":{},"modules/AiModule.html":{},"classes/AiResponse.html":{},"injectables/AiService.html":{},"classes/AiSurvey.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateAiResponseDto.html":{},"classes/CreateAiSurveyDto.html":{},"injectables/GenerateQuestions.html":{},"injectables/GenerateTokenProvider.html":{},"controllers/GoogleAuthenticationController.html":{},"modules/GoogleAuthenticationModule.html":{},"injectables/GoogleAuthenticationService.html":{},"classes/GoogleTokenDto.html":{},"modules/JwtAuthModule.html":{},"classes/UpdateAiResponseDto.html":{},"classes/UpdateAiSurveyDto.html":{},"classes/User.html":{}}}],["imports",{"_index":228,"title":{},"body":{"modules/AiModule.html":{},"modules/AppModule.html":{},"modules/GoogleAuthenticationModule.html":{},"modules/JwtAuthModule.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"guards/AccessTokenGuard.html":{},"controllers/AiController.html":{},"classes/AiResponse.html":{},"injectables/AiService.html":{},"classes/AiSurvey.html":{},"injectables/AppService.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateAiResponseDto.html":{},"classes/CreateAiSurveyDto.html":{},"injectables/GenerateQuestions.html":{},"injectables/GenerateTokenProvider.html":{},"controllers/GoogleAuthenticationController.html":{},"injectables/GoogleAuthenticationService.html":{},"classes/GoogleTokenDto.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AiController.html":{},"modules/AiModule.html":{},"classes/AiResponse.html":{},"injectables/AiService.html":{},"classes/AiSurvey.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateAiResponseDto.html":{},"classes/CreateAiSurveyDto.html":{},"injectables/GenerateQuestions.html":{},"injectables/GenerateTokenProvider.html":{},"controllers/GoogleAuthenticationController.html":{},"modules/GoogleAuthenticationModule.html":{},"injectables/GoogleAuthenticationService.html":{},"classes/GoogleTokenDto.html":{},"modules/JwtAuthModule.html":{},"classes/UpdateAiResponseDto.html":{},"classes/UpdateAiSurveyDto.html":{},"classes/User.html":{}}}],["inject",{"_index":39,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"injectables/GenerateQuestions.html":{},"injectables/GenerateTokenProvider.html":{},"injectables/GoogleAuthenticationService.html":{},"modules/JwtAuthModule.html":{}}}],["inject(googleconfig.key",{"_index":611,"title":{},"body":{"injectables/GoogleAuthenticationService.html":{}}}],["inject(jwtconfig.key",{"_index":71,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/GenerateTokenProvider.html":{}}}],["injectable",{"_index":40,"title":{"injectables/AiService.html":{},"injectables/AppService.html":{},"injectables/GenerateQuestions.html":{},"injectables/GenerateTokenProvider.html":{},"injectables/GoogleAuthenticationService.html":{}},"body":{"guards/AccessTokenGuard.html":{},"injectables/AiService.html":{},"injectables/AppService.html":{},"guards/AuthenticationGuard.html":{},"injectables/GenerateQuestions.html":{},"injectables/GenerateTokenProvider.html":{},"injectables/GoogleAuthenticationService.html":{},"coverage.html":{}}}],["injectables",{"_index":273,"title":{},"body":{"injectables/AiService.html":{},"injectables/AppService.html":{},"injectables/GenerateQuestions.html":{},"injectables/GenerateTokenProvider.html":{},"injectables/GoogleAuthenticationService.html":{},"overview.html":{}}}],["injecting",{"_index":65,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"injectables/GenerateTokenProvider.html":{},"injectables/GoogleAuthenticationService.html":{}}}],["injection",{"_index":383,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["injectmodel",{"_index":285,"title":{},"body":{"injectables/AiService.html":{},"injectables/GoogleAuthenticationService.html":{}}}],["injectmodel(airesponse.name",{"_index":287,"title":{},"body":{"injectables/AiService.html":{}}}],["injectmodel(aisurvey.name",{"_index":286,"title":{},"body":{"injectables/AiService.html":{}}}],["injectmodel(user.name",{"_index":612,"title":{},"body":{"injectables/GoogleAuthenticationService.html":{}}}],["installation",{"_index":793,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":795,"title":{},"body":{"index.html":{}}}],["instance",{"_index":429,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["integration",{"_index":753,"title":{},"body":{"index.html":{}}}],["interactive",{"_index":767,"title":{},"body":{"index.html":{}}}],["interesting",{"_index":504,"title":{},"body":{"injectables/GenerateQuestions.html":{}}}],["interface",{"_index":769,"title":{},"body":{"index.html":{}}}],["invalid",{"_index":563,"title":{},"body":{"controllers/GoogleAuthenticationController.html":{}}}],["isglobal",{"_index":369,"title":{},"body":{"modules/AppModule.html":{}}}],["ismongoid",{"_index":446,"title":{},"body":{"classes/CreateAiResponseDto.html":{}}}],["isnotempty",{"_index":445,"title":{},"body":{"classes/CreateAiResponseDto.html":{},"classes/CreateAiSurveyDto.html":{},"classes/GoogleTokenDto.html":{}}}],["iss",{"_index":62,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["isstring",{"_index":447,"title":{},"body":{"classes/CreateAiResponseDto.html":{},"classes/CreateAiSurveyDto.html":{}}}],["issuer",{"_index":97,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/GenerateTokenProvider.html":{},"modules/JwtAuthModule.html":{}}}],["john",{"_index":673,"title":{},"body":{"classes/User.html":{}}}],["john'})@prop({type",{"_index":663,"title":{},"body":{"classes/User.html":{}}}],["john.doe@example.com",{"_index":675,"title":{},"body":{"classes/User.html":{}}}],["john.doe@example.com'})@prop({type",{"_index":660,"title":{},"body":{"classes/User.html":{}}}],["joi",{"_index":719,"title":{},"body":{"dependencies.html":{}}}],["joseph",{"_index":816,"title":{},"body":{"index.html":{}}}],["json.stringify(guards",{"_index":422,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["jwt",{"_index":69,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/GenerateTokenProvider.html":{},"injectables/GoogleAuthenticationService.html":{},"index.html":{}}}],["jwt(refresh",{"_index":537,"title":{},"body":{"injectables/GenerateTokenProvider.html":{}}}],["jwt.module",{"_index":588,"title":{},"body":{"modules/GoogleAuthenticationModule.html":{}}}],["jwtauthmodule",{"_index":346,"title":{"modules/JwtAuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GoogleAuthenticationModule.html":{},"modules/JwtAuthModule.html":{},"modules.html":{},"overview.html":{}}}],["jwtconfig",{"_index":48,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"injectables/GenerateTokenProvider.html":{},"modules/GoogleAuthenticationModule.html":{},"modules/JwtAuthModule.html":{}}}],["jwtconfig.key",{"_index":651,"title":{},"body":{"modules/JwtAuthModule.html":{}}}],["jwtconfiguration",{"_index":18,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/GenerateTokenProvider.html":{},"modules/JwtAuthModule.html":{}}}],["jwtconfiguration.jwtsecret",{"_index":646,"title":{},"body":{"modules/JwtAuthModule.html":{}}}],["jwtconfiguration.jwttokenaudience",{"_index":648,"title":{},"body":{"modules/JwtAuthModule.html":{}}}],["jwtconfiguration.jwttokenexpiration",{"_index":650,"title":{},"body":{"modules/JwtAuthModule.html":{}}}],["jwtconfiguration.jwttokenissuer",{"_index":649,"title":{},"body":{"modules/JwtAuthModule.html":{}}}],["jwtmodule",{"_index":644,"title":{},"body":{"modules/JwtAuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":645,"title":{},"body":{"modules/JwtAuthModule.html":{}}}],["jwtservice",{"_index":17,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/GenerateTokenProvider.html":{}}}],["keyof",{"_index":842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keys",{"_index":416,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["last",{"_index":668,"title":{},"body":{"classes/User.html":{}}}],["lastname",{"_index":634,"title":{},"body":{"injectables/GoogleAuthenticationService.html":{},"classes/User.html":{}}}],["legend",{"_index":211,"title":{},"body":{"modules/AiModule.html":{},"modules/AppModule.html":{},"modules/GoogleAuthenticationModule.html":{},"overview.html":{}}}],["library",{"_index":606,"title":{},"body":{"injectables/GoogleAuthenticationService.html":{},"dependencies.html":{}}}],["license",{"_index":819,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":821,"title":{},"body":{"index.html":{}}}],["line.replace(/^\\d+\\.\\s",{"_index":520,"title":{},"body":{"injectables/GenerateQuestions.html":{}}}],["list",{"_index":150,"title":{},"body":{"controllers/AiController.html":{},"injectables/GenerateQuestions.html":{}}}],["literal",{"_index":34,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/GenerateQuestions.html":{},"injectables/GenerateTokenProvider.html":{},"injectables/GoogleAuthenticationService.html":{},"miscellaneous/typealiases.html":{}}}],["load",{"_index":372,"title":{},"body":{"modules/AppModule.html":{}}}],["local",{"_index":770,"title":{},"body":{"index.html":{}}}],["loginticket",{"_index":621,"title":{},"body":{"injectables/GoogleAuthenticationService.html":{}}}],["loginticket.getpayload",{"_index":625,"title":{},"body":{"injectables/GoogleAuthenticationService.html":{}}}],["loop",{"_index":425,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["manage",{"_index":752,"title":{},"body":{"index.html":{}}}],["management",{"_index":757,"title":{},"body":{"index.html":{}}}],["managing",{"_index":743,"title":{},"body":{"index.html":{}}}],["map((line",{"_index":519,"title":{},"body":{"injectables/GenerateQuestions.html":{}}}],["matching",{"_index":109,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AiController.html":{},"modules/AiModule.html":{},"classes/AiResponse.html":{},"injectables/AiService.html":{},"classes/AiSurvey.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateAiResponseDto.html":{},"classes/CreateAiSurveyDto.html":{},"injectables/GenerateQuestions.html":{},"injectables/GenerateTokenProvider.html":{},"controllers/GoogleAuthenticationController.html":{},"modules/GoogleAuthenticationModule.html":{},"injectables/GoogleAuthenticationService.html":{},"classes/GoogleTokenDto.html":{},"modules/JwtAuthModule.html":{},"classes/UpdateAiResponseDto.html":{},"classes/UpdateAiSurveyDto.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["max_tokens",{"_index":489,"title":{},"body":{"injectables/GenerateQuestions.html":{}}}],["messages",{"_index":491,"title":{},"body":{"injectables/GenerateQuestions.html":{}}}],["metadata",{"_index":407,"title":{},"body":{"guards/AuthenticationGuard.html":{},"dependencies.html":{}}}],["methods",{"_index":10,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AiController.html":{},"injectables/AiService.html":{},"injectables/AppService.html":{},"guards/AuthenticationGuard.html":{},"injectables/GenerateQuestions.html":{},"injectables/GenerateTokenProvider.html":{},"controllers/GoogleAuthenticationController.html":{},"injectables/GoogleAuthenticationService.html":{}}}],["miscellaneous",{"_index":730,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":820,"title":{},"body":{"index.html":{}}}],["mode",{"_index":800,"title":{},"body":{"index.html":{}}}],["model",{"_index":276,"title":{},"body":{"injectables/AiService.html":{},"injectables/GenerateQuestions.html":{},"injectables/GoogleAuthenticationService.html":{}}}],["module",{"_index":207,"title":{"modules/AiModule.html":{},"modules/AppModule.html":{},"modules/GoogleAuthenticationModule.html":{},"modules/JwtAuthModule.html":{}},"body":{"modules/AiModule.html":{},"modules/AppModule.html":{},"modules/GoogleAuthenticationModule.html":{},"modules/JwtAuthModule.html":{},"overview.html":{}}}],["modules",{"_index":209,"title":{"modules.html":{}},"body":{"modules/AiModule.html":{},"modules/AppModule.html":{},"modules/GoogleAuthenticationModule.html":{},"modules/JwtAuthModule.html":{},"modules.html":{},"overview.html":{}}}],["mongodb",{"_index":758,"title":{},"body":{"index.html":{}}}],["mongoose",{"_index":261,"title":{},"body":{"classes/AiResponse.html":{},"injectables/AiService.html":{},"classes/AiSurvey.html":{},"injectables/GoogleAuthenticationService.html":{},"classes/User.html":{},"dependencies.html":{},"index.html":{}}}],["mongoosemodule",{"_index":223,"title":{},"body":{"modules/AiModule.html":{},"modules/AppModule.html":{},"modules/GoogleAuthenticationModule.html":{}}}],["mongoosemodule.forfeature",{"_index":229,"title":{},"body":{"modules/AiModule.html":{},"modules/GoogleAuthenticationModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":375,"title":{},"body":{"modules/AppModule.html":{}}}],["mongooseschema",{"_index":327,"title":{},"body":{"classes/AiSurvey.html":{}}}],["mongooseschema.types.objectid",{"_index":330,"title":{},"body":{"classes/AiSurvey.html":{}}}],["name",{"_index":24,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AiController.html":{},"modules/AiModule.html":{},"injectables/AiService.html":{},"guards/AuthenticationGuard.html":{},"injectables/GenerateQuestions.html":{},"injectables/GenerateTokenProvider.html":{},"controllers/GoogleAuthenticationController.html":{},"modules/GoogleAuthenticationModule.html":{},"injectables/GoogleAuthenticationService.html":{},"classes/User.html":{}}}],["necessary",{"_index":66,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{}}}],["needs",{"_index":412,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["nest",{"_index":742,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":41,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AiController.html":{},"modules/AiModule.html":{},"injectables/AiService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthenticationGuard.html":{},"injectables/GenerateQuestions.html":{},"injectables/GenerateTokenProvider.html":{},"controllers/GoogleAuthenticationController.html":{},"modules/GoogleAuthenticationModule.html":{},"injectables/GoogleAuthenticationService.html":{},"modules/JwtAuthModule.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":42,"title":{},"body":{"guards/AccessTokenGuard.html":{},"modules/AppModule.html":{},"injectables/GenerateQuestions.html":{},"injectables/GenerateTokenProvider.html":{},"modules/GoogleAuthenticationModule.html":{},"injectables/GoogleAuthenticationService.html":{},"modules/JwtAuthModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":362,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":43,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/GenerateTokenProvider.html":{},"modules/JwtAuthModule.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":706,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mongoose",{"_index":224,"title":{},"body":{"modules/AiModule.html":{},"classes/AiResponse.html":{},"injectables/AiService.html":{},"classes/AiSurvey.html":{},"modules/AppModule.html":{},"modules/GoogleAuthenticationModule.html":{},"injectables/GoogleAuthenticationService.html":{},"classes/User.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":709,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":180,"title":{},"body":{"controllers/AiController.html":{},"classes/AiResponse.html":{},"classes/AiSurvey.html":{},"classes/CreateAiResponseDto.html":{},"classes/CreateAiSurveyDto.html":{},"controllers/GoogleAuthenticationController.html":{},"classes/GoogleTokenDto.html":{},"classes/UpdateAiResponseDto.html":{},"classes/UpdateAiSurveyDto.html":{},"classes/User.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":712,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":85,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AiService.html":{},"guards/AuthenticationGuard.html":{},"injectables/GenerateQuestions.html":{},"injectables/GoogleAuthenticationService.html":{},"coverage.html":{}}}],["none",{"_index":735,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["null",{"_index":423,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["number",{"_index":56,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AiService.html":{},"injectables/GenerateTokenProvider.html":{}}}],["numbered",{"_index":479,"title":{},"body":{"injectables/GenerateQuestions.html":{}}}],["oauth",{"_index":639,"title":{},"body":{"classes/GoogleTokenDto.html":{},"index.html":{}}}],["oauth2client",{"_index":603,"title":{},"body":{"injectables/GoogleAuthenticationService.html":{}}}],["oauthclient",{"_index":592,"title":{},"body":{"injectables/GoogleAuthenticationService.html":{}}}],["object",{"_index":76,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["observable",{"_index":46,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{}}}],["ocff.onrender.com/api",{"_index":776,"title":{},"body":{"index.html":{}}}],["omit",{"_index":541,"title":{},"body":{"injectables/GenerateTokenProvider.html":{}}}],["onmoduleinit",{"_index":593,"title":{},"body":{"injectables/GoogleAuthenticationService.html":{}}}],["openai",{"_index":466,"title":{},"body":{"injectables/GenerateQuestions.html":{},"dependencies.html":{}}}],["optional",{"_index":26,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AiController.html":{},"injectables/AiService.html":{},"classes/AiSurvey.html":{},"guards/AuthenticationGuard.html":{},"injectables/GenerateQuestions.html":{},"injectables/GenerateTokenProvider.html":{},"controllers/GoogleAuthenticationController.html":{},"injectables/GoogleAuthenticationService.html":{},"classes/User.html":{}}}],["opus",{"_index":514,"title":{},"body":{"injectables/GenerateQuestions.html":{}}}],["others",{"_index":329,"title":{},"body":{"classes/AiSurvey.html":{},"classes/CreateAiResponseDto.html":{}}}],["out",{"_index":220,"title":{},"body":{"modules/AiModule.html":{},"modules/AppModule.html":{},"modules/GoogleAuthenticationModule.html":{},"overview.html":{}}}],["overview",{"_index":790,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":699,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":158,"title":{},"body":{"controllers/AiController.html":{}}}],["parameters",{"_index":22,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AiController.html":{},"injectables/AiService.html":{},"guards/AuthenticationGuard.html":{},"injectables/GenerateQuestions.html":{},"injectables/GenerateTokenProvider.html":{},"controllers/GoogleAuthenticationController.html":{},"injectables/GoogleAuthenticationService.html":{}}}],["parsenumberedlist",{"_index":457,"title":{},"body":{"injectables/GenerateQuestions.html":{}}}],["parsenumberedlist(text",{"_index":462,"title":{},"body":{"injectables/GenerateQuestions.html":{}}}],["partialtype",{"_index":655,"title":{},"body":{"classes/UpdateAiResponseDto.html":{},"classes/UpdateAiSurveyDto.html":{}}}],["partialtype(createairesponsedto",{"_index":654,"title":{},"body":{"classes/UpdateAiResponseDto.html":{},"classes/UpdateAiSurveyDto.html":{}}}],["partialtype(createaisurveydto",{"_index":657,"title":{},"body":{"classes/UpdateAiResponseDto.html":{},"classes/UpdateAiSurveyDto.html":{}}}],["passed",{"_index":87,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{}}}],["patch",{"_index":157,"title":{},"body":{"controllers/AiController.html":{}}}],["patch(':id",{"_index":200,"title":{},"body":{"controllers/AiController.html":{}}}],["patterns",{"_index":791,"title":{},"body":{"index.html":{}}}],["payload",{"_index":90,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/GenerateTokenProvider.html":{},"injectables/GoogleAuthenticationService.html":{}}}],["pnpm",{"_index":794,"title":{},"body":{"index.html":{}}}],["post",{"_index":155,"title":{},"body":{"controllers/AiController.html":{},"controllers/GoogleAuthenticationController.html":{},"index.html":{}}}],["post('generate",{"_index":122,"title":{},"body":{"controllers/AiController.html":{}}}],["post('respond",{"_index":137,"title":{},"body":{"controllers/AiController.html":{}}}],["powered",{"_index":125,"title":{},"body":{"controllers/AiController.html":{},"index.html":{}}}],["prefix",{"_index":114,"title":{},"body":{"controllers/AiController.html":{},"controllers/GoogleAuthenticationController.html":{}}}],["private",{"_index":13,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AiService.html":{},"guards/AuthenticationGuard.html":{},"injectables/GenerateQuestions.html":{},"injectables/GenerateTokenProvider.html":{},"controllers/GoogleAuthenticationController.html":{},"injectables/GoogleAuthenticationService.html":{}}}],["process.env.node_env",{"_index":366,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["production",{"_index":773,"title":{},"body":{"index.html":{}}}],["project",{"_index":788,"title":{},"body":{"index.html":{}}}],["promise",{"_index":32,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AiService.html":{},"guards/AuthenticationGuard.html":{},"injectables/GenerateQuestions.html":{}}}],["promise.all",{"_index":544,"title":{},"body":{"injectables/GenerateTokenProvider.html":{}}}],["promise.resolve(instance.canactivate(context",{"_index":430,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["prompt",{"_index":473,"title":{},"body":{"injectables/GenerateQuestions.html":{}}}],["prop",{"_index":257,"title":{},"body":{"classes/AiResponse.html":{},"classes/AiSurvey.html":{},"classes/User.html":{}}}],["properties",{"_index":236,"title":{"properties.html":{}},"body":{"classes/AiResponse.html":{},"classes/AiSurvey.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateAiResponseDto.html":{},"classes/CreateAiSurveyDto.html":{},"injectables/GenerateQuestions.html":{},"injectables/GoogleAuthenticationService.html":{},"classes/GoogleTokenDto.html":{},"classes/User.html":{},"properties.html":{}}}],["protected",{"_index":754,"title":{},"body":{"index.html":{}}}],["provide",{"_index":384,"title":{},"body":{"modules/AppModule.html":{}}}],["provided",{"_index":242,"title":{},"body":{"classes/AiResponse.html":{}}}],["provider/generate",{"_index":586,"title":{},"body":{"modules/GoogleAuthenticationModule.html":{},"injectables/GoogleAuthenticationService.html":{}}}],["providers",{"_index":214,"title":{},"body":{"modules/AiModule.html":{},"modules/AppModule.html":{},"modules/GoogleAuthenticationModule.html":{},"overview.html":{}}}],["provides",{"_index":745,"title":{},"body":{"index.html":{}}}],["provoking",{"_index":510,"title":{},"body":{"injectables/GenerateQuestions.html":{}}}],["public",{"_index":525,"title":{},"body":{"injectables/GenerateTokenProvider.html":{},"injectables/GoogleAuthenticationService.html":{}}}],["question",{"_index":193,"title":{},"body":{"controllers/AiController.html":{},"index.html":{}}}],["question')@apioperation({summary",{"_index":138,"title":{},"body":{"controllers/AiController.html":{}}}],["questions",{"_index":129,"title":{},"body":{"controllers/AiController.html":{},"modules/AiModule.html":{},"classes/AiResponse.html":{},"injectables/AiService.html":{},"classes/AiSurvey.html":{},"classes/CreateAiResponseDto.html":{},"classes/CreateAiSurveyDto.html":{},"injectables/GenerateQuestions.html":{},"index.html":{}}}],["questions')@apioperation({summary",{"_index":123,"title":{},"body":{"controllers/AiController.html":{}}}],["questions'})@apiresponse({status",{"_index":127,"title":{},"body":{"controllers/AiController.html":{}}}],["questions.ts",{"_index":455,"title":{},"body":{"injectables/GenerateQuestions.html":{},"coverage.html":{}}}],["questions.ts:20",{"_index":461,"title":{},"body":{"injectables/GenerateQuestions.html":{}}}],["questions.ts:53",{"_index":465,"title":{},"body":{"injectables/GenerateQuestions.html":{}}}],["questions.ts:77",{"_index":463,"title":{},"body":{"injectables/GenerateQuestions.html":{}}}],["questions.ts:9",{"_index":459,"title":{},"body":{"injectables/GenerateQuestions.html":{}}}],["questions/generate",{"_index":227,"title":{},"body":{"modules/AiModule.html":{},"injectables/AiService.html":{},"injectables/GenerateQuestions.html":{},"coverage.html":{}}}],["readonly",{"_index":189,"title":{},"body":{"controllers/AiController.html":{},"injectables/AiService.html":{},"controllers/AppController.html":{},"injectables/GoogleAuthenticationService.html":{}}}],["recommend",{"_index":268,"title":{},"body":{"classes/AiResponse.html":{},"classes/AiSurvey.html":{},"classes/CreateAiResponseDto.html":{}}}],["record",{"_index":403,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["redirecturi",{"_index":618,"title":{},"body":{"injectables/GoogleAuthenticationService.html":{}}}],["ref",{"_index":331,"title":{},"body":{"classes/AiSurvey.html":{}}}],["reflect",{"_index":723,"title":{},"body":{"dependencies.html":{}}}],["reflection",{"_index":513,"title":{},"body":{"injectables/GenerateQuestions.html":{}}}],["reflector",{"_index":397,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["refreshtoken",{"_index":543,"title":{},"body":{"injectables/GenerateTokenProvider.html":{}}}],["relationships",{"_index":787,"title":{},"body":{"index.html":{}}}],["relevant",{"_index":476,"title":{},"body":{"injectables/GenerateQuestions.html":{}}}],["remove(@param('id",{"_index":205,"title":{},"body":{"controllers/AiController.html":{}}}],["remove(id",{"_index":313,"title":{},"body":{"injectables/AiService.html":{}}}],["removes",{"_index":314,"title":{},"body":{"injectables/AiService.html":{}}}],["replace(/\\n/g",{"_index":498,"title":{},"body":{"injectables/GenerateQuestions.html":{}}}],["replace(/\\s+/g",{"_index":499,"title":{},"body":{"injectables/GenerateQuestions.html":{}}}],["request",{"_index":44,"title":{},"body":{"guards/AccessTokenGuard.html":{},"miscellaneous/variables.html":{}}}],["request.headers.authorization?.split",{"_index":74,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["request/response",{"_index":765,"title":{},"body":{"index.html":{}}}],["request[request_user_key",{"_index":101,"title":{},"body":{"guards/AccessTokenGuard.html":{},"miscellaneous/variables.html":{}}}],["request_user_key",{"_index":52,"title":{},"body":{"guards/AccessTokenGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["required",{"_index":245,"title":{},"body":{"classes/AiResponse.html":{},"classes/AiSurvey.html":{},"classes/User.html":{}}}],["reset",{"_index":219,"title":{},"body":{"modules/AiModule.html":{},"modules/AppModule.html":{},"modules/GoogleAuthenticationModule.html":{},"overview.html":{}}}],["respond",{"_index":440,"title":{},"body":{"classes/CreateAiResponseDto.html":{}}}],["respondtoquestion",{"_index":117,"title":{},"body":{"controllers/AiController.html":{},"injectables/AiService.html":{}}}],["respondtoquestion(createairesponsedto",{"_index":135,"title":{},"body":{"controllers/AiController.html":{}}}],["respondtoquestion(respondtoquestion",{"_index":282,"title":{},"body":{"injectables/AiService.html":{}}}],["respondtoquestion.surveyid",{"_index":300,"title":{},"body":{"injectables/AiService.html":{}}}],["response",{"_index":141,"title":{},"body":{"controllers/AiController.html":{},"classes/AiResponse.html":{},"injectables/GenerateQuestions.html":{}}}],["response.content[0].text",{"_index":495,"title":{},"body":{"injectables/GenerateQuestions.html":{}}}],["response.content[0].type",{"_index":494,"title":{},"body":{"injectables/GenerateQuestions.html":{}}}],["response.dto",{"_index":163,"title":{},"body":{"controllers/AiController.html":{},"injectables/AiService.html":{},"classes/UpdateAiResponseDto.html":{},"classes/UpdateAiSurveyDto.html":{}}}],["response.dto.ts",{"_index":437,"title":{},"body":{"classes/CreateAiResponseDto.html":{},"coverage.html":{}}}],["response.dto.ts:12",{"_index":442,"title":{},"body":{"classes/CreateAiResponseDto.html":{}}}],["response.dto.ts:21",{"_index":439,"title":{},"body":{"classes/CreateAiResponseDto.html":{}}}],["response.entity",{"_index":185,"title":{},"body":{"controllers/AiController.html":{},"modules/AiModule.html":{},"injectables/AiService.html":{},"classes/AiSurvey.html":{}}}],["response.entity.ts",{"_index":235,"title":{},"body":{"classes/AiResponse.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["response.entity.ts:15",{"_index":256,"title":{},"body":{"classes/AiResponse.html":{}}}],["response.entity.ts:26",{"_index":246,"title":{},"body":{"classes/AiResponse.html":{}}}],["response.entity.ts:36",{"_index":253,"title":{},"body":{"classes/AiResponse.html":{}}}],["responses",{"_index":140,"title":{},"body":{"controllers/AiController.html":{},"classes/AiSurvey.html":{},"index.html":{}}}],["rest",{"_index":739,"title":{},"body":{"index.html":{}}}],["results",{"_index":108,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AiController.html":{},"modules/AiModule.html":{},"classes/AiResponse.html":{},"injectables/AiService.html":{},"classes/AiSurvey.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateAiResponseDto.html":{},"classes/CreateAiSurveyDto.html":{},"injectables/GenerateQuestions.html":{},"injectables/GenerateTokenProvider.html":{},"controllers/GoogleAuthenticationController.html":{},"modules/GoogleAuthenticationModule.html":{},"injectables/GoogleAuthenticationService.html":{},"classes/GoogleTokenDto.html":{},"modules/JwtAuthModule.html":{},"classes/UpdateAiResponseDto.html":{},"classes/UpdateAiSurveyDto.html":{},"classes/User.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":75,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AiController.html":{},"injectables/AiService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthenticationGuard.html":{},"injectables/GenerateQuestions.html":{},"injectables/GenerateTokenProvider.html":{},"controllers/GoogleAuthenticationController.html":{},"injectables/GoogleAuthenticationService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":31,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AiController.html":{},"injectables/AiService.html":{},"injectables/AppService.html":{},"guards/AuthenticationGuard.html":{},"injectables/GenerateQuestions.html":{},"injectables/GenerateTokenProvider.html":{},"controllers/GoogleAuthenticationController.html":{},"injectables/GoogleAuthenticationService.html":{}}}],["right",{"_index":418,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["role",{"_index":492,"title":{},"body":{"injectables/GenerateQuestions.html":{}}}],["routes",{"_index":755,"title":{},"body":{"index.html":{}}}],["run",{"_index":797,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":47,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{},"dependencies.html":{}}}],["satisfaction",{"_index":322,"title":{},"body":{"classes/AiSurvey.html":{},"classes/CreateAiSurveyDto.html":{}}}],["satisfied",{"_index":266,"title":{},"body":{"classes/AiResponse.html":{},"classes/AiSurvey.html":{},"classes/CreateAiResponseDto.html":{}}}],["saving",{"_index":293,"title":{},"body":{"injectables/AiService.html":{}}}],["schema",{"_index":231,"title":{},"body":{"modules/AiModule.html":{},"classes/AiResponse.html":{},"classes/AiSurvey.html":{},"modules/GoogleAuthenticationModule.html":{},"classes/User.html":{},"index.html":{}}}],["schemafactory",{"_index":258,"title":{},"body":{"classes/AiResponse.html":{},"classes/AiSurvey.html":{},"classes/User.html":{}}}],["schemafactory.createforclass(airesponse",{"_index":272,"title":{},"body":{"classes/AiResponse.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(aisurvey",{"_index":334,"title":{},"body":{"classes/AiSurvey.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(user",{"_index":677,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["schemas",{"_index":759,"title":{},"body":{"index.html":{}}}],["secret",{"_index":93,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/GenerateTokenProvider.html":{},"modules/JwtAuthModule.html":{}}}],["self",{"_index":512,"title":{},"body":{"injectables/GenerateQuestions.html":{}}}],["serve",{"_index":808,"title":{},"body":{"index.html":{}}}],["service",{"_index":70,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/AiSurvey.html":{},"classes/CreateAiResponseDto.html":{},"injectables/GenerateTokenProvider.html":{},"index.html":{}}}],["services",{"_index":67,"title":{},"body":{"guards/AccessTokenGuard.html":{},"guards/AuthenticationGuard.html":{}}}],["setmetadata(auth_type_key",{"_index":846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["signoptions",{"_index":647,"title":{},"body":{"modules/JwtAuthModule.html":{}}}],["signtoken",{"_index":539,"title":{},"body":{"injectables/GenerateTokenProvider.html":{}}}],["someone",{"_index":477,"title":{},"body":{"injectables/GenerateQuestions.html":{}}}],["sonnet",{"_index":487,"title":{},"body":{"injectables/GenerateQuestions.html":{}}}],["source",{"_index":4,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AiController.html":{},"modules/AiModule.html":{},"classes/AiResponse.html":{},"injectables/AiService.html":{},"classes/AiSurvey.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateAiResponseDto.html":{},"classes/CreateAiSurveyDto.html":{},"injectables/GenerateQuestions.html":{},"injectables/GenerateTokenProvider.html":{},"controllers/GoogleAuthenticationController.html":{},"modules/GoogleAuthenticationModule.html":{},"injectables/GoogleAuthenticationService.html":{},"classes/GoogleTokenDto.html":{},"modules/JwtAuthModule.html":{},"classes/UpdateAiResponseDto.html":{},"classes/UpdateAiSurveyDto.html":{},"classes/User.html":{}}}],["specific",{"_index":475,"title":{},"body":{"injectables/GenerateQuestions.html":{}}}],["split('\\n",{"_index":516,"title":{},"body":{"injectables/GenerateQuestions.html":{}}}],["src/.../access",{"_index":836,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../active",{"_index":838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../ai",{"_index":834,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../app.module.ts",{"_index":839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.decorator.ts",{"_index":732,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":737,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../user.entity.ts",{"_index":835,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/ai/ai.controller.ts",{"_index":113,"title":{},"body":{"controllers/AiController.html":{},"coverage.html":{}}}],["src/ai/ai.controller.ts:34",{"_index":133,"title":{},"body":{"controllers/AiController.html":{}}}],["src/ai/ai.controller.ts:49",{"_index":144,"title":{},"body":{"controllers/AiController.html":{}}}],["src/ai/ai.controller.ts:63",{"_index":153,"title":{},"body":{"controllers/AiController.html":{}}}],["src/ai/ai.module.ts",{"_index":221,"title":{},"body":{"modules/AiModule.html":{}}}],["src/ai/ai.service.ts",{"_index":274,"title":{},"body":{"injectables/AiService.html":{},"coverage.html":{}}}],["src/ai/ai.service.ts:13",{"_index":279,"title":{},"body":{"injectables/AiService.html":{}}}],["src/ai/ai.service.ts:24",{"_index":281,"title":{},"body":{"injectables/AiService.html":{}}}],["src/ai/ai.service.ts:46",{"_index":284,"title":{},"body":{"injectables/AiService.html":{}}}],["src/ai/ai.service.ts:50",{"_index":283,"title":{},"body":{"injectables/AiService.html":{}}}],["src/ai/dto/create",{"_index":436,"title":{},"body":{"classes/CreateAiResponseDto.html":{},"classes/CreateAiSurveyDto.html":{},"coverage.html":{}}}],["src/ai/dto/update",{"_index":652,"title":{},"body":{"classes/UpdateAiResponseDto.html":{},"classes/UpdateAiSurveyDto.html":{},"coverage.html":{}}}],["src/ai/entities/ai",{"_index":234,"title":{},"body":{"classes/AiResponse.html":{},"classes/AiSurvey.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/ai/generate",{"_index":454,"title":{},"body":{"injectables/GenerateQuestions.html":{},"coverage.html":{}}}],["src/app.controller.ts",{"_index":336,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.module.ts",{"_index":347,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app.service.ts",{"_index":388,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":389,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/decorators/active",{"_index":173,"title":{},"body":{"controllers/AiController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/decorators/auth.decorator",{"_index":171,"title":{},"body":{"controllers/AiController.html":{},"guards/AuthenticationGuard.html":{}}}],["src/auth/decorators/auth.decorator.ts",{"_index":692,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/auth/dtos/google",{"_index":636,"title":{},"body":{"classes/GoogleTokenDto.html":{},"coverage.html":{}}}],["src/auth/entities/user.entity",{"_index":328,"title":{},"body":{"classes/AiSurvey.html":{}}}],["src/auth/entities/user.entity.ts",{"_index":658,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/auth/entities/user.entity.ts:15",{"_index":667,"title":{},"body":{"classes/User.html":{}}}],["src/auth/entities/user.entity.ts:25",{"_index":664,"title":{},"body":{"classes/User.html":{}}}],["src/auth/entities/user.entity.ts:36",{"_index":671,"title":{},"body":{"classes/User.html":{}}}],["src/auth/entities/user.entity.ts:46",{"_index":661,"title":{},"body":{"classes/User.html":{}}}],["src/auth/google",{"_index":552,"title":{},"body":{"controllers/GoogleAuthenticationController.html":{},"modules/GoogleAuthenticationModule.html":{},"injectables/GoogleAuthenticationService.html":{},"coverage.html":{}}}],["src/auth/guards/access",{"_index":6,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AiController.html":{},"injectables/AiService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/auth/guards/authentication/authentication.guard.ts",{"_index":392,"title":{},"body":{"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["src/auth/guards/authentication/authentication.guard.ts:14",{"_index":398,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/auth/guards/authentication/authentication.guard.ts:33",{"_index":399,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/auth/jwt.module.ts",{"_index":643,"title":{},"body":{"modules/JwtAuthModule.html":{}}}],["src/auth/provider/generate",{"_index":522,"title":{},"body":{"injectables/GenerateTokenProvider.html":{},"coverage.html":{}}}],["src/config/database.config",{"_index":467,"title":{},"body":{"injectables/GenerateQuestions.html":{}}}],["src/config/google.config",{"_index":607,"title":{},"body":{"injectables/GoogleAuthenticationService.html":{}}}],["src/config/jwt.config",{"_index":49,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/GenerateTokenProvider.html":{}}}],["src/main.ts",{"_index":695,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":798,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":801,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":802,"title":{},"body":{"index.html":{}}}],["started",{"_index":738,"title":{"index.html":{}},"body":{}}],["statements",{"_index":681,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":394,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["status",{"_index":191,"title":{},"body":{"controllers/AiController.html":{},"controllers/GoogleAuthenticationController.html":{}}}],["stay",{"_index":813,"title":{},"body":{"index.html":{}}}],["string",{"_index":58,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AiController.html":{},"classes/AiResponse.html":{},"classes/AiSurvey.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateAiResponseDto.html":{},"classes/CreateAiSurveyDto.html":{},"injectables/GenerateQuestions.html":{},"classes/GoogleTokenDto.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["sub",{"_index":55,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/GenerateTokenProvider.html":{},"injectables/GoogleAuthenticationService.html":{}}}],["submit",{"_index":139,"title":{},"body":{"controllers/AiController.html":{},"index.html":{}}}],["submitted",{"_index":142,"title":{},"body":{"controllers/AiController.html":{},"classes/AiResponse.html":{}}}],["successfully",{"_index":131,"title":{},"body":{"controllers/AiController.html":{},"controllers/GoogleAuthenticationController.html":{}}}],["suggest",{"_index":503,"title":{},"body":{"injectables/GenerateQuestions.html":{}}}],["suggested",{"_index":147,"title":{},"body":{"controllers/AiController.html":{},"index.html":{}}}],["suggesttitles",{"_index":118,"title":{},"body":{"controllers/AiController.html":{},"injectables/AiService.html":{},"injectables/GenerateQuestions.html":{}}}],["summary",{"_index":190,"title":{},"body":{"controllers/AiController.html":{},"controllers/GoogleAuthenticationController.html":{}}}],["support",{"_index":822,"title":{},"body":{"modules.html":{}}}],["survey",{"_index":126,"title":{},"body":{"controllers/AiController.html":{},"classes/AiResponse.html":{},"injectables/AiService.html":{},"classes/AiSurvey.html":{},"classes/CreateAiResponseDto.html":{},"classes/CreateAiSurveyDto.html":{},"index.html":{}}}],["survey'})@isnotempty()@isstring",{"_index":452,"title":{},"body":{"classes/CreateAiSurveyDto.html":{}}}],["survey'})@prop({type",{"_index":323,"title":{},"body":{"classes/AiSurvey.html":{}}}],["survey.dto",{"_index":168,"title":{},"body":{"controllers/AiController.html":{},"injectables/AiService.html":{},"classes/UpdateAiResponseDto.html":{},"classes/UpdateAiSurveyDto.html":{}}}],["survey.dto.ts",{"_index":451,"title":{},"body":{"classes/CreateAiSurveyDto.html":{},"coverage.html":{}}}],["survey.dto.ts:11",{"_index":453,"title":{},"body":{"classes/CreateAiSurveyDto.html":{}}}],["survey.entity",{"_index":183,"title":{},"body":{"controllers/AiController.html":{},"modules/AiModule.html":{},"injectables/AiService.html":{}}}],["survey.entity.ts",{"_index":315,"title":{},"body":{"classes/AiSurvey.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["survey.entity.ts:17",{"_index":324,"title":{},"body":{"classes/AiSurvey.html":{}}}],["survey.entity.ts:28",{"_index":319,"title":{},"body":{"classes/AiSurvey.html":{}}}],["survey.entity.ts:37",{"_index":326,"title":{},"body":{"classes/AiSurvey.html":{}}}],["survey.entity.ts:46",{"_index":320,"title":{},"body":{"classes/AiSurvey.html":{}}}],["survey.entity.ts:56",{"_index":318,"title":{},"body":{"classes/AiSurvey.html":{}}}],["surveyid",{"_index":239,"title":{},"body":{"classes/AiResponse.html":{},"classes/CreateAiResponseDto.html":{}}}],["surveys",{"_index":744,"title":{},"body":{"index.html":{}}}],["svg",{"_index":823,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":761,"title":{},"body":{"index.html":{}}}],["t",{"_index":530,"title":{},"body":{"injectables/GenerateTokenProvider.html":{}}}],["table",{"_index":698,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":697,"title":{},"body":{"coverage.html":{}}}],["technical",{"_index":782,"title":{},"body":{"index.html":{}}}],["test",{"_index":777,"title":{},"body":{"index.html":{}}}],["test:covgenerate",{"_index":807,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":806,"title":{},"body":{"index.html":{}}}],["testing",{"_index":768,"title":{},"body":{"index.html":{}}}],["tests",{"_index":804,"title":{},"body":{"index.html":{}}}],["text",{"_index":464,"title":{},"body":{"injectables/GenerateQuestions.html":{}}}],["themselves",{"_index":508,"title":{},"body":{"injectables/GenerateQuestions.html":{}}}],["then((canactivate",{"_index":431,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.accesstokenguard",{"_index":404,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.airesponsemodel(respondtoquestion",{"_index":305,"title":{},"body":{"injectables/AiService.html":{}}}],["this.aiservice.findone(+id",{"_index":199,"title":{},"body":{"controllers/AiController.html":{}}}],["this.aiservice.generatequestions(createaidto",{"_index":192,"title":{},"body":{"controllers/AiController.html":{}}}],["this.aiservice.remove(+id",{"_index":206,"title":{},"body":{"controllers/AiController.html":{}}}],["this.aiservice.respondtoquestion(createairesponsedto",{"_index":194,"title":{},"body":{"controllers/AiController.html":{}}}],["this.aiservice.suggesttitles",{"_index":195,"title":{},"body":{"controllers/AiController.html":{}}}],["this.aiservice.update(+id",{"_index":203,"title":{},"body":{"controllers/AiController.html":{}}}],["this.aisurveymodel",{"_index":294,"title":{},"body":{"injectables/AiService.html":{}}}],["this.aisurveymodel.findbyid",{"_index":299,"title":{},"body":{"injectables/AiService.html":{}}}],["this.anthropic",{"_index":471,"title":{},"body":{"injectables/GenerateQuestions.html":{}}}],["this.anthropic.messages.create",{"_index":483,"title":{},"body":{"injectables/GenerateQuestions.html":{}}}],["this.appservice.gethello",{"_index":340,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authtypeguardmap[type]).flat",{"_index":420,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.configservice.get('claude_ai_api_key",{"_index":470,"title":{},"body":{"injectables/GenerateQuestions.html":{}}}],["this.createtoken",{"_index":545,"title":{},"body":{"injectables/GenerateTokenProvider.html":{}}}],["this.extractrequestfromheader",{"_index":81,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["this.generatequestionsprovider.generatequestions",{"_index":290,"title":{},"body":{"injectables/AiService.html":{}}}],["this.generatequestionsprovider.suggesttitles",{"_index":298,"title":{},"body":{"injectables/AiService.html":{}}}],["this.generatetoken.generatetokens",{"_index":631,"title":{},"body":{"injectables/GoogleAuthenticationService.html":{}}}],["this.googleauthenticationservice.authenticate",{"_index":577,"title":{},"body":{"controllers/GoogleAuthenticationController.html":{}}}],["this.googleconfiguration.googleclientid",{"_index":614,"title":{},"body":{"injectables/GoogleAuthenticationService.html":{}}}],["this.googleconfiguration.googleclientsecret",{"_index":616,"title":{},"body":{"injectables/GoogleAuthenticationService.html":{}}}],["this.googleconfiguration.googleredirecturi",{"_index":619,"title":{},"body":{"injectables/GoogleAuthenticationService.html":{}}}],["this.jwtconfiguration.jwtrefreshtokenexpiration",{"_index":549,"title":{},"body":{"injectables/GenerateTokenProvider.html":{}}}],["this.jwtconfiguration.jwtsecret",{"_index":94,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/GenerateTokenProvider.html":{}}}],["this.jwtconfiguration.jwttokenaudience",{"_index":96,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/GenerateTokenProvider.html":{}}}],["this.jwtconfiguration.jwttokenexpiration",{"_index":546,"title":{},"body":{"injectables/GenerateTokenProvider.html":{}}}],["this.jwtconfiguration.jwttokenissuer",{"_index":98,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/GenerateTokenProvider.html":{}}}],["this.jwtservice.signasync",{"_index":540,"title":{},"body":{"injectables/GenerateTokenProvider.html":{}}}],["this.jwtservice.verifyasync(token",{"_index":92,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["this.oauthclient",{"_index":617,"title":{},"body":{"injectables/GoogleAuthenticationService.html":{}}}],["this.oauthclient.verifyidtoken",{"_index":622,"title":{},"body":{"injectables/GoogleAuthenticationService.html":{}}}],["this.parsenumberedlist(content",{"_index":496,"title":{},"body":{"injectables/GenerateQuestions.html":{}}}],["this.reflector.getallandoverride",{"_index":411,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.usermodel.create",{"_index":632,"title":{},"body":{"injectables/GoogleAuthenticationService.html":{}}}],["this.usermodel.findone",{"_index":630,"title":{},"body":{"injectables/GoogleAuthenticationService.html":{}}}],["thought",{"_index":509,"title":{},"body":{"injectables/GenerateQuestions.html":{}}}],["through",{"_index":426,"title":{},"body":{"guards/AuthenticationGuard.html":{},"index.html":{}}}],["throw",{"_index":84,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/AiService.html":{},"guards/AuthenticationGuard.html":{},"injectables/GenerateQuestions.html":{},"injectables/GoogleAuthenticationService.html":{}}}],["timestamp",{"_index":248,"title":{},"body":{"classes/AiResponse.html":{},"classes/AiSurvey.html":{}}}],["title",{"_index":291,"title":{},"body":{"injectables/AiService.html":{},"classes/AiSurvey.html":{},"classes/CreateAiSurveyDto.html":{},"injectables/GenerateQuestions.html":{}}}],["titles",{"_index":151,"title":{},"body":{"controllers/AiController.html":{},"injectables/GenerateQuestions.html":{},"index.html":{}}}],["titles')@apioperation({summary",{"_index":146,"title":{},"body":{"controllers/AiController.html":{}}}],["titles'})@apiresponse({status",{"_index":148,"title":{},"body":{"controllers/AiController.html":{}}}],["titles/questions",{"_index":505,"title":{},"body":{"injectables/GenerateQuestions.html":{}}}],["token",{"_index":73,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/GenerateTokenProvider.html":{},"controllers/GoogleAuthenticationController.html":{},"injectables/GoogleAuthenticationService.html":{},"classes/GoogleTokenDto.html":{}}}],["token'})@apiresponse({status",{"_index":560,"title":{},"body":{"controllers/GoogleAuthenticationController.html":{}}}],["token.access_token",{"_index":624,"title":{},"body":{"injectables/GoogleAuthenticationService.html":{}}}],["token.dto",{"_index":568,"title":{},"body":{"controllers/GoogleAuthenticationController.html":{},"injectables/GoogleAuthenticationService.html":{}}}],["token.dto.ts",{"_index":637,"title":{},"body":{"classes/GoogleTokenDto.html":{},"coverage.html":{}}}],["token.dto.ts:10",{"_index":641,"title":{},"body":{"classes/GoogleTokenDto.html":{}}}],["token.guard",{"_index":175,"title":{},"body":{"controllers/AiController.html":{},"injectables/AiService.html":{},"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{}}}],["token.guard.ts",{"_index":8,"title":{},"body":{"guards/AccessTokenGuard.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["token.guard.ts:27",{"_index":21,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["token.guard.ts:38",{"_index":35,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["token.guard.ts:43",{"_index":29,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["token.provider",{"_index":587,"title":{},"body":{"modules/GoogleAuthenticationModule.html":{},"injectables/GoogleAuthenticationService.html":{}}}],["token.provider.ts",{"_index":523,"title":{},"body":{"injectables/GenerateTokenProvider.html":{},"coverage.html":{}}}],["token.provider.ts:18",{"_index":529,"title":{},"body":{"injectables/GenerateTokenProvider.html":{}}}],["token.provider.ts:47",{"_index":532,"title":{},"body":{"injectables/GenerateTokenProvider.html":{}}}],["token.provider.ts:8",{"_index":527,"title":{},"body":{"injectables/GenerateTokenProvider.html":{}}}],["token/access",{"_index":7,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AiController.html":{},"injectables/AiService.html":{},"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["touch",{"_index":814,"title":{},"body":{"index.html":{}}}],["transform",{"_index":443,"title":{},"body":{"classes/CreateAiResponseDto.html":{}}}],["transformer",{"_index":444,"title":{},"body":{"classes/CreateAiResponseDto.html":{},"dependencies.html":{}}}],["trim",{"_index":500,"title":{},"body":{"injectables/GenerateQuestions.html":{}}}],["true",{"_index":100,"title":{},"body":{"guards/AccessTokenGuard.html":{},"classes/AiResponse.html":{},"classes/AiSurvey.html":{},"modules/AppModule.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateAiResponseDto.html":{},"classes/CreateAiSurveyDto.html":{},"classes/User.html":{}}}],["try",{"_index":89,"title":{},"body":{"guards/AccessTokenGuard.html":{},"injectables/GenerateQuestions.html":{},"injectables/GoogleAuthenticationService.html":{}}}],["type",{"_index":25,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AiController.html":{},"classes/AiResponse.html":{},"injectables/AiService.html":{},"classes/AiSurvey.html":{},"guards/AuthenticationGuard.html":{},"classes/CreateAiResponseDto.html":{},"classes/CreateAiSurveyDto.html":{},"injectables/GenerateQuestions.html":{},"injectables/GenerateTokenProvider.html":{},"controllers/GoogleAuthenticationController.html":{},"injectables/GoogleAuthenticationService.html":{},"classes/GoogleTokenDto.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":832,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeorm",{"_index":726,"title":{},"body":{"dependencies.html":{}}}],["types",{"_index":406,"title":{},"body":{"guards/AuthenticationGuard.html":{},"dependencies.html":{}}}],["ui",{"_index":762,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":605,"title":{},"body":{"injectables/GoogleAuthenticationService.html":{}}}],["unauthorizedexception(`${error.message",{"_index":635,"title":{},"body":{"injectables/GoogleAuthenticationService.html":{}}}],["undefined",{"_index":152,"title":{},"body":{"controllers/AiController.html":{},"classes/AiResponse.html":{},"classes/AiSurvey.html":{},"classes/CreateAiResponseDto.html":{},"miscellaneous/variables.html":{}}}],["undefined})@apibearerauth",{"_index":132,"title":{},"body":{"controllers/AiController.html":{}}}],["undefined})@isnotempty()@isstring({each",{"_index":438,"title":{},"body":{"classes/CreateAiResponseDto.html":{}}}],["undefined})@prop({type",{"_index":244,"title":{},"body":{"classes/AiResponse.html":{},"classes/AiSurvey.html":{}}}],["unique",{"_index":665,"title":{},"body":{"classes/User.html":{}}}],["unit",{"_index":803,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":154,"title":{},"body":{"controllers/AiController.html":{},"injectables/AiService.html":{},"injectables/GenerateTokenProvider.html":{},"injectables/GoogleAuthenticationService.html":{}}}],["unlicensed",{"_index":831,"title":{},"body":{"properties.html":{}}}],["update(@param('id",{"_index":201,"title":{},"body":{"controllers/AiController.html":{}}}],["update(id",{"_index":311,"title":{},"body":{"injectables/AiService.html":{}}}],["updateaidto",{"_index":202,"title":{},"body":{"controllers/AiController.html":{},"injectables/AiService.html":{}}}],["updateairesponsedto",{"_index":165,"title":{"classes/UpdateAiResponseDto.html":{}},"body":{"controllers/AiController.html":{},"injectables/AiService.html":{},"classes/UpdateAiResponseDto.html":{},"classes/UpdateAiSurveyDto.html":{},"coverage.html":{}}}],["updateaisurveydto",{"_index":164,"title":{"classes/UpdateAiSurveyDto.html":{}},"body":{"controllers/AiController.html":{},"injectables/AiService.html":{},"classes/UpdateAiResponseDto.html":{},"classes/UpdateAiSurveyDto.html":{},"coverage.html":{}}}],["updates",{"_index":312,"title":{},"body":{"injectables/AiService.html":{}}}],["uri",{"_index":377,"title":{},"body":{"modules/AppModule.html":{}}}],["url",{"_index":771,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":385,"title":{},"body":{"modules/AppModule.html":{}}}],["usefactory",{"_index":376,"title":{},"body":{"modules/AppModule.html":{},"modules/JwtAuthModule.html":{}}}],["usenewurlparser",{"_index":379,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":53,"title":{"classes/User.html":{}},"body":{"guards/AccessTokenGuard.html":{},"controllers/AiController.html":{},"injectables/AiService.html":{},"classes/AiSurvey.html":{},"injectables/GenerateQuestions.html":{},"injectables/GenerateTokenProvider.html":{},"controllers/GoogleAuthenticationController.html":{},"modules/GoogleAuthenticationModule.html":{},"injectables/GoogleAuthenticationService.html":{},"classes/User.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["user._id",{"_index":547,"title":{},"body":{"injectables/GenerateTokenProvider.html":{}}}],["user.decorator",{"_index":174,"title":{},"body":{"controllers/AiController.html":{}}}],["user.decorator.ts",{"_index":691,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.email",{"_index":548,"title":{},"body":{"injectables/GenerateTokenProvider.html":{}}}],["user.id",{"_index":550,"title":{},"body":{"injectables/GenerateTokenProvider.html":{}}}],["user.name",{"_index":590,"title":{},"body":{"modules/GoogleAuthenticationModule.html":{}}}],["user.sub",{"_index":296,"title":{},"body":{"injectables/AiService.html":{}}}],["user.sub.tostring",{"_index":302,"title":{},"body":{"injectables/AiService.html":{}}}],["user[field",{"_index":845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userdocument",{"_index":676,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["userid",{"_index":295,"title":{},"body":{"injectables/AiService.html":{},"classes/AiSurvey.html":{},"injectables/GenerateTokenProvider.html":{}}}],["usermodel",{"_index":595,"title":{},"body":{"injectables/GoogleAuthenticationService.html":{}}}],["userpayload",{"_index":54,"title":{},"body":{"guards/AccessTokenGuard.html":{},"controllers/AiController.html":{},"injectables/AiService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["userschema",{"_index":585,"title":{},"body":{"modules/GoogleAuthenticationModule.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user})@apiresponse({status",{"_index":561,"title":{},"body":{"controllers/GoogleAuthenticationController.html":{}}}],["user})@prop({type",{"_index":325,"title":{},"body":{"classes/AiSurvey.html":{}}}],["useunifiedtopology",{"_index":380,"title":{},"body":{"modules/AppModule.html":{}}}],["uuid",{"_index":728,"title":{},"body":{"dependencies.html":{}}}],["validate",{"_index":83,"title":{},"body":{"guards/AccessTokenGuard.html":{}}}],["validation",{"_index":760,"title":{},"body":{"index.html":{}}}],["validationschema",{"_index":373,"title":{},"body":{"modules/AppModule.html":{}}}],["validator",{"_index":448,"title":{},"body":{"classes/CreateAiResponseDto.html":{},"classes/CreateAiSurveyDto.html":{},"classes/GoogleTokenDto.html":{},"dependencies.html":{}}}],["valuable",{"_index":506,"title":{},"body":{"injectables/GenerateQuestions.html":{}}}],["value",{"_index":734,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":535,"title":{},"body":{"injectables/GenerateTokenProvider.html":{}}}],["variable",{"_index":688,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":837,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verify",{"_index":620,"title":{},"body":{"injectables/GoogleAuthenticationService.html":{}}}],["version",{"_index":829,"title":{},"body":{"properties.html":{}}}],["very",{"_index":265,"title":{},"body":{"classes/AiResponse.html":{}}}],["void",{"_index":602,"title":{},"body":{"injectables/GoogleAuthenticationService.html":{}}}],["watch",{"_index":799,"title":{},"body":{"index.html":{}}}],["website",{"_index":817,"title":{},"body":{"index.html":{}}}],["well",{"_index":609,"title":{},"body":{"injectables/GoogleAuthenticationService.html":{}}}],["without",{"_index":480,"title":{},"body":{"injectables/GenerateQuestions.html":{}}}],["world",{"_index":391,"title":{},"body":{"injectables/AppService.html":{}}}],["writing",{"_index":478,"title":{},"body":{"injectables/GenerateQuestions.html":{}}}],["ya29.a0afb_byc",{"_index":642,"title":{},"body":{"classes/GoogleTokenDto.html":{}}}],["ya29.a0afb_byc...'})@isnotempty",{"_index":640,"title":{},"body":{"classes/GoogleTokenDto.html":{}}}],["yes",{"_index":267,"title":{},"body":{"classes/AiResponse.html":{},"classes/CreateAiResponseDto.html":{}}}],["zoom",{"_index":218,"title":{},"body":{"modules/AiModule.html":{},"modules/AppModule.html":{},"modules/GoogleAuthenticationModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"guards/AccessTokenGuard.html":{"url":"guards/AccessTokenGuard.html","title":"guard - AccessTokenGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AccessTokenGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/access-token/access-token.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                extractRequestFromHeader\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, jwtConfiguration: ConfigType<>)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/access-token/access-token.guard.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtConfiguration\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/access-token/access-token.guard.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        extractRequestFromHeader\n                        \n                    \n                \n            \n            \n                \n                        \n                    extractRequestFromHeader(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/access-token/access-token.guard.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  HttpException,\n  HttpStatus,\n  Inject,\n  Injectable,\n} from '@nestjs/common';\nimport { ConfigType } from '@nestjs/config';\nimport { JwtService } from '@nestjs/jwt';\nimport { Request } from 'express';\nimport { Observable } from 'rxjs';\nimport jwtConfig from 'src/config/jwt.config';\n\nexport const REQUEST_USER_KEY = 'user';\n\nexport type UserPayload = {\n  sub: number;\n  email: string;\n  iat: number;\n  exp: number;\n  aud: string;\n  iss: string;\n};\n\n@Injectable()\nexport class AccessTokenGuard implements CanActivate {\n  constructor(\n    // injecting necessary services here\n\n    // injecting jwt service\n    private jwtService: JwtService,\n\n    @Inject(jwtConfig.KEY)\n    private jwtConfiguration: ConfigType,\n  ) {}\n\n  private extractRequestFromHeader({ request }: { request: Request }) {\n    const [_, token] = request.headers.authorization?.split(' ') ?? [];\n    return token;\n  }\n\n  async canActivate(context: ExecutionContext): Promise {\n    // get the request object from the execution context\n    const request = context.switchToHttp().getRequest();\n\n    // extract the token from the request (header)\n    const token = this.extractRequestFromHeader({ request });\n    // console.log('inside canActivate', token);\n\n    // validate the token\n    if (!token) {\n      throw new HttpException('No token passed', HttpStatus.UNAUTHORIZED);\n    }\n\n    try {\n      const payload = await this.jwtService.verifyAsync(token, {\n        secret: this.jwtConfiguration.jwtSecret,\n        // audience: this.jwtConfiguration.jwtTokenAudience,\n        // issuer: this.jwtConfiguration.jwtTokenIssuer,\n        // ignoreExpiration: true\n      });\n      request[REQUEST_USER_KEY] = payload as UserPayload;\n    } catch (error: any) {\n      throw new HttpException(`${error.message}`, HttpStatus.UNAUTHORIZED, {\n        cause: error.message,\n        description: error,\n      });\n    }\n\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AiController.html":{"url":"controllers/AiController.html","title":"controller - AiController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AiController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ai/ai.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                ai\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                generateQuestions\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                respondToQuestion\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                suggestTitles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        generateQuestions\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateQuestions(createAiDto: CreateAiSurveyDto, user: UserPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('generate-questions')@ApiOperation({summary: 'Generate AI-powered survey questions'})@ApiResponse({status: 201, description: 'Questions generated successfully', type: undefined})@ApiBearerAuth()\n                \n            \n\n                    \n                        \n                            Defined in src/ai/ai.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createAiDto\n                                            \n                                                            CreateAiSurveyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        respondToQuestion\n                        \n                    \n                \n            \n            \n                \n                        \n                    respondToQuestion(createAiResponseDto: CreateAiResponseDto, user: UserPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('respond-to-question')@ApiOperation({summary: 'Submit responses to survey questions'})@ApiResponse({status: 201, description: 'Response submitted successfully', type: AiResponse})@ApiBearerAuth()\n                \n            \n\n                    \n                        \n                            Defined in src/ai/ai.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createAiResponseDto\n                                            \n                                                            CreateAiResponseDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        suggestTitles\n                        \n                    \n                \n            \n            \n                \n                        \n                    suggestTitles()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('suggest-titles')@ApiOperation({summary: 'Get AI-suggested survey titles'})@ApiResponse({status: 200, description: 'Returns a list of suggested survey titles', type: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/ai/ai.controller.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { AiService } from './ai.service';\nimport { CreateAiResponseDto } from './dto/create-ai-response.dto';\nimport { UpdateAiSurveyDto, UpdateAiResponseDto } from './dto/update-ai.dto';\nimport { CreateAiSurveyDto } from './dto/create-ai-survey.dto';\nimport { Auth, AuthType } from 'src/auth/decorators/auth.decorator';\nimport { ActiveUser } from 'src/auth/decorators/active-user.decorator';\nimport { UserPayload } from 'src/auth/guards/access-token/access-token.guard';\nimport { ApiTags, ApiOperation, ApiResponse, ApiBearerAuth } from '@nestjs/swagger';\nimport { AiSurvey } from './entities/ai-survey.entity';\nimport { AiResponse } from './entities/ai-response.entity';\n\n@ApiTags('AI')\n@Controller('ai')\nexport class AiController {\n  constructor(private readonly aiService: AiService) {}\n\n  @Post('generate-questions')\n  @ApiOperation({ summary: 'Generate AI-powered survey questions' })\n  @ApiResponse({ \n    status: 201, \n    description: 'Questions generated successfully',\n    type: [String]\n  })\n  @ApiBearerAuth()\n  generateQuestions(\n    @Body() createAiDto: CreateAiSurveyDto,\n    @ActiveUser() user: UserPayload,\n  ) {\n    return this.aiService.generateQuestions(createAiDto, user);\n  }\n\n  @Post('respond-to-question')\n  @ApiOperation({ summary: 'Submit responses to survey questions' })\n  @ApiResponse({ \n    status: 201, \n    description: 'Response submitted successfully',\n    type: AiResponse\n  })\n  @ApiBearerAuth()\n  respondToQuestion(\n    @Body() createAiResponseDto: CreateAiResponseDto,\n    @ActiveUser() user: UserPayload,\n  ) {\n    return this.aiService.respondToQuestion(createAiResponseDto, user);\n  }\n\n  @Get('suggest-titles')\n  @ApiOperation({ summary: 'Get AI-suggested survey titles' })\n  @ApiResponse({ \n    status: 200, \n    description: 'Returns a list of suggested survey titles',\n    type: [String]\n  })\n  async suggestTitles() {\n    return await this.aiService.suggestTitles();\n  }\n\n  // @Get(':id')\n  // findOne(@Param('id') id: string) {\n  //   return this.aiService.findOne(+id);\n  // }\n\n  // @Patch(':id')\n  // update(@Param('id') id: string, @Body() updateAiDto: UpdateAiSurveyDto) {\n  //   return this.aiService.update(+id, updateAiDto);\n  // }\n\n  // @Delete(':id')\n  // remove(@Param('id') id: string) {\n  //   return this.aiService.remove(+id);\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AiModule.html":{"url":"modules/AiModule.html","title":"module - AiModule","body":"\n                   \n\n\n\n\n    Modules\n    AiModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AiModule\n\n\n\ncluster_AiModule_providers\n\n\n\n\nAiService\n\nAiService\n\n\n\nAiModule\n\nAiModule\n\nAiModule -->\n\nAiService->AiModule\n\n\n\n\n\nGenerateQuestions\n\nGenerateQuestions\n\nAiModule -->\n\nGenerateQuestions->AiModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/ai/ai.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AiService\n                        \n                        \n                            GenerateQuestions\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AiController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AiService } from './ai.service';\nimport { AiController } from './ai.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { AiResponse, AiResponseSchema } from './entities/ai-response.entity';\nimport { AiSurvey, AiSurveySchema } from './entities/ai-survey.entity';\nimport { GenerateQuestions } from './generate-questions/generate-questions';\n\n@Module({\n  controllers: [AiController],\n  providers: [AiService, GenerateQuestions],\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: AiResponse.name,\n        schema: AiResponseSchema,\n      },\n      {\n        name: AiSurvey.name,\n        schema: AiSurveySchema,\n      },\n    ]),\n  ],\n})\nexport class AiModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AiResponse.html":{"url":"classes/AiResponse.html","title":"class - AiResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AiResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ai/entities/ai-response.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                answers\n                            \n                            \n                                    \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                surveyId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        answers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Array of answers provided for the survey questions', example: undefined, type: undefined})@Prop({type: undefined, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/ai/entities/ai-response.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Timestamp when the response was submitted', example: '2024-03-20T10:30:00.000Z'})@Prop({type: Date, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/ai/entities/ai-response.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        surveyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The ID of the survey this response belongs to', example: '507f1f77bcf86cd799439011'})@Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/ai/entities/ai-response.entity.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document, HydratedDocument } from 'mongoose';\nimport { ApiProperty } from '@nestjs/swagger';\n\n@Schema()\nexport class AiResponse extends Document {\n  @ApiProperty({\n    description: 'The ID of the survey this response belongs to',\n    example: '507f1f77bcf86cd799439011'\n  })\n  @Prop({\n    type: String,\n    required: true,\n  })\n  surveyId: string;\n\n  @ApiProperty({\n    description: 'Array of answers provided for the survey questions',\n    example: ['Very satisfied', 'Yes, I would recommend'],\n    type: [String]\n  })\n  @Prop({\n    type: [String],\n    required: true,\n  })\n  answers: string[];\n\n  @ApiProperty({\n    description: 'Timestamp when the response was submitted',\n    example: '2024-03-20T10:30:00.000Z'\n  })\n  @Prop({\n    type: Date,\n    default: Date.now,\n  })\n  createdAt: Date;\n}\n\nexport type AiResponseDocument = HydratedDocument;\n\nexport const AiResponseSchema = SchemaFactory.createForClass(AiResponse);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AiService.html":{"url":"injectables/AiService.html","title":"injectable - AiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ai/ai.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generateQuestions\n                            \n                            \n                                    Async\n                                respondToQuestion\n                            \n                            \n                                    Async\n                                suggestTitles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(aiSurveyModel: Model, aiResponseModel: Model, generateQuestionsProvider: GenerateQuestions)\n                    \n                \n                        \n                            \n                                Defined in src/ai/ai.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        aiSurveyModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        aiResponseModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        generateQuestionsProvider\n                                                  \n                                                        \n                                                                        GenerateQuestions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        generateQuestions\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateQuestions(createAiDto: CreateAiSurveyDto, user: UserPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in src/ai/ai.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createAiDto\n                                            \n                                                            CreateAiSurveyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        respondToQuestion\n                        \n                    \n                \n            \n            \n                \n                        \n                    respondToQuestion(respondToQuestion: CreateAiResponseDto, user: UserPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in src/ai/ai.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                respondToQuestion\n                                            \n                                                            CreateAiResponseDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UserPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        suggestTitles\n                        \n                    \n                \n            \n            \n                \n                        \n                    suggestTitles()\n                \n            \n\n\n                    \n                        \n                            Defined in src/ai/ai.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { CreateAiResponseDto } from './dto/create-ai-response.dto';\nimport { CreateAiSurveyDto } from './dto/create-ai-survey.dto';\nimport { UpdateAiResponseDto, UpdateAiSurveyDto } from './dto/update-ai.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { AiSurvey } from './entities/ai-survey.entity';\nimport { AiResponse } from './entities/ai-response.entity';\nimport { GenerateQuestions } from './generate-questions/generate-questions';\nimport { UserPayload } from 'src/auth/guards/access-token/access-token.guard';\n\n@Injectable()\nexport class AiService {\n  constructor(\n    @InjectModel(AiSurvey.name)\n    private readonly aiSurveyModel: Model,\n\n    @InjectModel(AiResponse.name)\n    private readonly aiResponseModel: Model,\n\n    private generateQuestionsProvider: GenerateQuestions,\n  ) {}\n\n  async generateQuestions(\n    createAiDto: CreateAiSurveyDto,\n    user: UserPayload,\n  ): Promise {\n    console.log({ user });\n\n    // generating questions\n    const questions = await this.generateQuestionsProvider.generateQuestions({\n      title: createAiDto.title,\n    });\n\n    // saving the survey\n    const aiSurvey = new this.aiSurveyModel({\n      title: createAiDto.title,\n      userId: user.sub,\n      questions,\n    });\n    await aiSurvey.save();\n\n    return questions;\n  }\n\n  async suggestTitles(): Promise {\n    return await this.generateQuestionsProvider.suggestTitles();\n  }\n\n  async respondToQuestion(\n    respondToQuestion: CreateAiResponseDto,\n    user: UserPayload,\n  ) {\n    const aiSurvey = await this.aiSurveyModel.findById(\n      respondToQuestion.surveyId,\n    );\n\n    if (aiSurvey.userId.toString() !== user.sub.toString()) {\n      throw new HttpException(\n        'This Survey doesnt belong to you',\n        HttpStatus.UNAUTHORIZED,\n      );\n    }\n\n    const aiResponse = new this.aiResponseModel(respondToQuestion);\n    await aiResponse.save();\n    aiSurvey.responses.push(aiResponse);\n    await aiSurvey.save();\n\n    return aiResponse;\n  }\n\n  // findAll() {\n  //   return `This action returns all ai`;\n  // }\n\n  // findOne(id: number) {\n  //   return `This action returns a #${id} ai`;\n  // }\n\n  // update(id: number, updateAiDto: UpdateAiSurveyDto) {\n  //   return `This action updates a #${id} ai`;\n  // }\n\n  // remove(id: number) {\n  //   return `This action removes a #${id} ai`;\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AiSurvey.html":{"url":"classes/AiSurvey.html","title":"class - AiSurvey","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AiSurvey\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ai/entities/ai-survey.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                questions\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                responses\n                            \n                            \n                                    \n                                    \n                                title\n                            \n                            \n                                    \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Timestamp when the survey was created', example: '2024-03-20T10:00:00.000Z'})@Prop({type: Date, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/ai/entities/ai-survey.entity.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        questions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Array of questions in the survey', example: undefined, type: undefined})@Prop({type: undefined, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/ai/entities/ai-survey.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        responses\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AiResponse[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Array of responses to the survey', type: undefined})@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/ai/entities/ai-survey.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The title of the survey', example: 'Customer Satisfaction Survey'})@Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/ai/entities/ai-survey.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The user who created the survey', type: User})@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/ai/entities/ai-survey.entity.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document, HydratedDocument, Schema as MongooseSchema } from 'mongoose';\nimport { AiResponse } from './ai-response.entity';\nimport { User } from 'src/auth/entities/user.entity';\nimport { ApiProperty } from '@nestjs/swagger';\n\n@Schema()\nexport class AiSurvey extends Document {\n  @ApiProperty({\n    description: 'The title of the survey',\n    example: 'Customer Satisfaction Survey'\n  })\n  @Prop({\n    type: String,\n    required: true,\n  })\n  title: string;\n\n  @ApiProperty({\n    description: 'Array of questions in the survey',\n    example: ['How satisfied are you with our service?', 'Would you recommend us to others?'],\n    type: [String]\n  })\n  @Prop({\n    type: [String],\n    required: true,\n  })\n  questions: string[];\n\n  @ApiProperty({\n    description: 'The user who created the survey',\n    type: User\n  })\n  @Prop({\n    type: [{ type: MongooseSchema.Types.ObjectId, ref: 'User' }],\n  })\n  userId: User;\n\n  @ApiProperty({\n    description: 'Array of responses to the survey',\n    type: [AiResponse]\n  })\n  @Prop({\n    type: [{ type: MongooseSchema.Types.ObjectId, ref: 'AiResponse' }],\n  })\n  responses?: AiResponse[];\n\n  @ApiProperty({\n    description: 'Timestamp when the survey was created',\n    example: '2024-03-20T10:00:00.000Z'\n  })\n  @Prop({\n    type: Date,\n    default: Date.now,\n  })\n  createdAt: Date;\n}\n\nexport type AiSurveyDocument = HydratedDocument;\n\nexport const AiSurveySchema = SchemaFactory.createForClass(AiSurvey);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  // @Get()\n  // getHello(): string {\n  //   return this.appService.getHello();\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAiModule\n\nAiModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAiModule->AppModule\n\n\n\n\n\nGoogleAuthenticationModule\n\nGoogleAuthenticationModule\n\nAppModule -->\n\nGoogleAuthenticationModule->AppModule\n\n\n\n\n\nJwtAuthModule\n\nJwtAuthModule\n\nAppModule -->\n\nJwtAuthModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AiModule\n                        \n                        \n                            GoogleAuthenticationModule\n                        \n                        \n                            JwtAuthModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { AiModule } from './ai/ai.module';\nimport databaseConfig from './config/database.config';\nimport environmentValidation from './config/environmentValidation';\nimport { GoogleAuthenticationModule } from './auth/google-authentication.module';\nimport { AccessTokenGuard } from './auth/guards/access-token/access-token.guard';\nimport { AuthenticationGuard } from './auth/guards/authentication/authentication.guard';\nimport { APP_GUARD } from '@nestjs/core';\nimport { JwtAuthModule } from './auth/jwt.module';\nimport jwtConfig from './config/jwt.config';\n\nconst ENV = process.env.NODE_ENV || 'development';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      envFilePath: ENV === 'development' ? '.env' : `.env.${ENV}`,\n      load: [databaseConfig],\n      validationSchema: environmentValidation,\n    }),\n\n    ConfigModule.forFeature(jwtConfig),\n\n    MongooseModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: async (configService: ConfigService) => ({\n        uri: configService.get('MONGODB_URI'),\n        useNewUrlParser: true,\n        useUnifiedTopology: true,\n      }),\n    }),\n\n    JwtAuthModule,\n    AiModule,\n    GoogleAuthenticationModule,\n  ],\n  controllers: [AppController],\n  providers: [\n    AppService,\n    AccessTokenGuard, // because authentication guard has a dependency injection of AccessTokenGuard\n    {\n      provide: APP_GUARD,\n      useClass: AuthenticationGuard,\n      // useClass: AccessTokenGuard,\n    }, // applying global guard\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthenticationGuard.html":{"url":"guards/AuthenticationGuard.html","title":"guard - AuthenticationGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthenticationGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/authentication/authentication.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authTypeGuardMap\n                            \n                            \n                                    Private\n                                    Static\n                                defaultAuthType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector, accessTokenGuard: AccessTokenGuard)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/authentication/authentication.guard.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accessTokenGuard\n                                                  \n                                                        \n                                                                        AccessTokenGuard\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/authentication/authentication.guard.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  HttpException,\n  HttpStatus,\n  Injectable,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Observable } from 'rxjs';\nimport { AccessTokenGuard } from '../access-token/access-token.guard';\nimport { AUTH_TYPE_KEY, AuthType } from 'src/auth/decorators/auth.decorator';\n\n@Injectable()\nexport class AuthenticationGuard implements CanActivate {\n  constructor(\n    // injecting necessary services here\n\n    // injecting reflector\n    private reflector: Reflector,\n\n    private accessTokenGuard: AccessTokenGuard,\n  ) {}\n\n  private static defaultAuthType: AuthType = AuthType.BEARER;\n\n  private authTypeGuardMap: Record = {\n    [AuthType.BEARER]: this.accessTokenGuard,\n    [AuthType.NONE]: {\n      canActivate: () => true,\n    },\n  };\n\n  async canActivate(context: ExecutionContext): Promise {\n    // get all auth types from the reflector (metadata)\n    // getting the auth decorator passed\n    const authTypes = this.reflector.getAllAndOverride(\n      AUTH_TYPE_KEY, // decorator that needs checking\n      [context.getHandler(), context.getClass()], // get keys for all type auth\n    ) ?? [AuthenticationGuard.defaultAuthType];\n\n    // console.log({ authTypes });\n\n    // getting the right guard for the right auth type decorator\n    const guards = authTypes.map((type) => this.authTypeGuardMap[type]).flat();\n\n    // console.log('Guards:', JSON.stringify(guards, null, 2));\n\n    // array of guards\n    // loop guards canActivate\n    // loop through all the guards and fire the canActivate (returns a boolean)\n    for (const instance of guards) {\n      // console.log({ instance });\n      const canActivate = await Promise.resolve(instance.canActivate(context))\n        .then((canActivate) => {\n          // console.log('canActivate', canActivate);\n          return canActivate;\n        })\n        .catch((error: any) => {\n          throw new HttpException(`${error.message}`, HttpStatus.UNAUTHORIZED, {\n            cause: error.message,\n            description: error,\n          });\n        });\n\n      if (!canActivate) {\n        throw new HttpException('Unauthorized', HttpStatus.UNAUTHORIZED);\n      }\n      return true;\n    }\n\n    // throw exception if no canActivate\n    throw new HttpException('Unauthorized', HttpStatus.UNAUTHORIZED);\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAiResponseDto.html":{"url":"classes/CreateAiResponseDto.html","title":"class - CreateAiResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAiResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ai/dto/create-ai-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                answers\n                            \n                            \n                                    \n                                    \n                                    \n                                surveyId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        answers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Array of answers to the survey questions', example: undefined, type: undefined})@IsNotEmpty()@IsString({each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/ai/dto/create-ai-response.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        surveyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The ID of the survey to respond to', example: '507f1f77bcf86cd799439011'})@IsNotEmpty()@IsMongoId()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/ai/dto/create-ai-response.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Transform } from 'class-transformer';\nimport { IsNotEmpty, IsMongoId, IsString } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateAiResponseDto {\n  @ApiProperty({\n    description: 'The ID of the survey to respond to',\n    example: '507f1f77bcf86cd799439011'\n  })\n  @IsNotEmpty()\n  @IsMongoId()\n  surveyId: string;\n\n  @ApiProperty({\n    description: 'Array of answers to the survey questions',\n    example: ['Yes, I am satisfied', 'The service was excellent', 'I would recommend to others'],\n    type: [String]\n  })\n  @IsNotEmpty()\n  @IsString({ each: true })\n  answers: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAiSurveyDto.html":{"url":"classes/CreateAiSurveyDto.html","title":"class - CreateAiSurveyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAiSurveyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ai/dto/create-ai-survey.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The title of the survey', example: 'Customer Satisfaction Survey'})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/ai/dto/create-ai-survey.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateAiSurveyDto {\n  @ApiProperty({\n    description: 'The title of the survey',\n    example: 'Customer Satisfaction Survey'\n  })\n  @IsNotEmpty()\n  @IsString()\n  title: string;\n\n  // @IsNotEmpty()\n  // @IsString({ each: true })\n  // questions: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GenerateQuestions.html":{"url":"injectables/GenerateQuestions.html","title":"injectable - GenerateQuestions","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GenerateQuestions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ai/generate-questions/generate-questions.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                anthropic\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generateQuestions\n                            \n                            \n                                    Private\n                                parseNumberedList\n                            \n                            \n                                    Async\n                                suggestTitles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/ai/generate-questions/generate-questions.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        generateQuestions\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateQuestions(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/ai/generate-questions/generate-questions.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        parseNumberedList\n                        \n                    \n                \n            \n            \n                \n                        \n                    parseNumberedList(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/ai/generate-questions/generate-questions.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        suggestTitles\n                        \n                    \n                \n            \n            \n                \n                        \n                    suggestTitles()\n                \n            \n\n\n                    \n                        \n                            Defined in src/ai/generate-questions/generate-questions.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        anthropic\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Anthropic\n\n                    \n                \n                    \n                        \n                                Defined in src/ai/generate-questions/generate-questions.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Inject, Injectable } from '@nestjs/common';\nimport { ConfigService, ConfigType } from '@nestjs/config';\nimport OpenAI from 'openai';\nimport databaseConfig from 'src/config/database.config';\nimport Anthropic from '@anthropic-ai/sdk';\n\n@Injectable()\nexport class GenerateQuestions {\n  private anthropic: Anthropic;\n\n  constructor(private configService: ConfigService) {\n    const CLAUDE_AI_API_KEY =\n      this.configService.get('CLAUDE_AI_API_KEY');\n\n    this.anthropic = new Anthropic({\n      apiKey: CLAUDE_AI_API_KEY,\n    });\n  }\n\n  async generateQuestions({ title }: { title: string }): Promise {\n    const prompt = `Generate 5 specific questions that would be relevant for someone writing about \"${title}\". \n    Return them as a numbered list without any additional commentary.`;\n\n    try {\n      const response = await this.anthropic.messages.create({\n        model: 'claude-3-7-sonnet-20250219',\n        max_tokens: 1024,\n        messages: [{ role: 'user', content: prompt }],\n      });\n\n      const content =\n        response.content[0].type === 'text' ? response.content[0].text : '';\n      return this.parseNumberedList(content);\n\n      // const formattedText =\n      //   response.content[0].type === 'text'\n      //     ? response.content[0].text\n      //         .replace(/\\n/g, ' ')\n      //         .replace(/\\s+/g, ' ')\n      //         .trim()\n      //     : '';\n      // console.log({ formattedText });\n\n      // return formattedText;\n    } catch (error) {\n      throw new HttpException(\n        `Failed to generate prompt: ${error}`,\n        HttpStatus.BAD_REQUEST,\n      );\n    }\n  }\n\n  async suggestTitles(): Promise {\n    const prompt = `Suggest 5 interesting titles/questions that would be valuable for someone to answer about themselves. \n    These should be thought-provoking and help with self-reflection. \n    Return them as a numbered list without any additional commentary.`;\n\n    try {\n      const response = await this.anthropic.messages.create({\n        model: 'claude-3-opus-20240229',\n        max_tokens: 1024,\n        messages: [{ role: 'user', content: prompt }],\n      });\n\n      const content =\n        response.content[0].type === 'text' ? response.content[0].text : '';\n\n      return this.parseNumberedList(content);\n    } catch (error) {\n      throw new HttpException(\n        'Failed to suggest titles',\n        HttpStatus.BAD_REQUEST,\n      );\n    }\n  }\n\n  private parseNumberedList(text: string): string[] {\n    return text\n      .split('\\n')\n      .filter((line) => /^\\d+\\./.test(line))\n      .map((line) => line.replace(/^\\d+\\.\\s*/, '').trim());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GenerateTokenProvider.html":{"url":"injectables/GenerateTokenProvider.html","title":"injectable - GenerateTokenProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GenerateTokenProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/provider/generate-token.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                createToken\n                            \n                            \n                                    Public\n                                    Async\n                                generateTokens\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, jwtConfiguration: ConfigType<>)\n                    \n                \n                        \n                            \n                                Defined in src/auth/provider/generate-token.provider.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtConfiguration\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        createToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    createToken(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/provider/generate-token.provider.ts:18\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        generateTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateTokens(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/provider/generate-token.provider.ts:47\n                        \n                    \n\n\n            \n                \n                        generateTokens\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { ConfigType } from '@nestjs/config';\nimport { JwtService } from '@nestjs/jwt';\nimport jwtConfig from 'src/config/jwt.config';\nimport { User } from '../entities/user.entity';\n\n@Injectable()\nexport class GenerateTokenProvider {\n  constructor(\n    // injecting jwt service dependency\n    private jwtService: JwtService,\n\n    // injecting jwtConfig (environment values)\n    @Inject(jwtConfig.KEY)\n    private jwtConfiguration: ConfigType,\n  ) {}\n\n  private async createToken({\n    userId,\n    expiresIn,\n    payload,\n  }: {\n    userId: number;\n    expiresIn: number;\n    payload?: T;\n  }) {\n    // generate jwt(refresh) token for authenticated user\n    const signToken = await this.jwtService.signAsync(\n      {\n        sub: userId,\n        ...payload,\n      },\n      {\n        expiresIn: expiresIn,\n        secret: this.jwtConfiguration.jwtSecret,\n        audience: this.jwtConfiguration.jwtTokenAudience,\n        issuer: this.jwtConfiguration.jwtTokenIssuer,\n      },\n    );\n\n    return signToken;\n  }\n\n  /**\n   * generateTokens\n   */\n  public async generateTokens({\n    user,\n  }: {\n    // user: Omit;\n    user: User;\n  }) {\n    const [accessToken, refreshToken] = await Promise.all([\n      await this.createToken({\n        expiresIn: this.jwtConfiguration.jwtTokenExpiration,\n        userId: user._id as number,\n        payload: {\n          email: user.email,\n        },\n      }),\n\n      await this.createToken({\n        expiresIn: this.jwtConfiguration.jwtRefreshTokenExpiration,\n        userId: user.id,\n      }),\n    ]);\n\n    return {\n      accessToken,\n      refreshToken,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/GoogleAuthenticationController.html":{"url":"controllers/GoogleAuthenticationController.html","title":"controller - GoogleAuthenticationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  GoogleAuthenticationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/google-authentication.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                google-authentication\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                googleAuthentication\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                        googleAuthentication\n                        \n                    \n                \n            \n            \n                \n                        \n                    googleAuthentication(body: GoogleTokenDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(HttpStatus.OK)@Auth(AuthType.NONE)@Post('')@ApiOperation({summary: 'Authenticate user with Google token'})@ApiResponse({status: 200, description: 'User authenticated successfully', type: User})@ApiResponse({status: 401, description: 'Invalid or expired token'})\n                \n            \n\n                    \n                        \n                            Defined in src/auth/google-authentication.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            GoogleTokenDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, HttpCode, HttpStatus, Post } from '@nestjs/common';\nimport { GoogleTokenDto } from './dtos/google-token.dto';\nimport { GoogleAuthenticationService } from './google-authentication.service';\nimport { Auth, AuthType } from './decorators/auth.decorator';\nimport { ApiTags, ApiOperation, ApiResponse } from '@nestjs/swagger';\nimport { User } from './entities/user.entity';\n\n@ApiTags('Authentication')\n@Controller('google-authentication')\nexport class GoogleAuthenticationController {\n  constructor(\n    private googleAuthenticationService: GoogleAuthenticationService,\n  ) {}\n\n  @HttpCode(HttpStatus.OK)\n  @Auth(AuthType.NONE)\n  @Post('')\n  @ApiOperation({ summary: 'Authenticate user with Google token' })\n  @ApiResponse({ \n    status: 200, \n    description: 'User authenticated successfully',\n    type: User\n  })\n  @ApiResponse({ \n    status: 401, \n    description: 'Invalid or expired token' \n  })\n  googleAuthentication(@Body() body: GoogleTokenDto) {\n    return this.googleAuthenticationService.authenticate({ token: body });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GoogleAuthenticationModule.html":{"url":"modules/GoogleAuthenticationModule.html","title":"module - GoogleAuthenticationModule","body":"\n                   \n\n\n\n\n    Modules\n    GoogleAuthenticationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GoogleAuthenticationModule\n\n\n\ncluster_GoogleAuthenticationModule_providers\n\n\n\ncluster_GoogleAuthenticationModule_imports\n\n\n\n\nJwtAuthModule\n\nJwtAuthModule\n\n\n\nGoogleAuthenticationModule\n\nGoogleAuthenticationModule\n\nGoogleAuthenticationModule -->\n\nJwtAuthModule->GoogleAuthenticationModule\n\n\n\n\n\nGenerateTokenProvider\n\nGenerateTokenProvider\n\nGoogleAuthenticationModule -->\n\nGenerateTokenProvider->GoogleAuthenticationModule\n\n\n\n\n\nGoogleAuthenticationService\n\nGoogleAuthenticationService\n\nGoogleAuthenticationModule -->\n\nGoogleAuthenticationService->GoogleAuthenticationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/google-authentication.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GenerateTokenProvider\n                        \n                        \n                            GoogleAuthenticationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            GoogleAuthenticationController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            JwtAuthModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { GoogleAuthenticationController } from './google-authentication.controller';\nimport { GoogleAuthenticationService } from './google-authentication.service';\nimport { ConfigModule } from '@nestjs/config';\nimport googleConfig from '../config/google.config';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { User, UserSchema } from './entities/user.entity';\nimport { GenerateTokenProvider } from './provider/generate-token.provider';\nimport { JwtAuthModule } from './jwt.module';\nimport jwtConfig from '../config/jwt.config';\n\n@Module({\n  controllers: [GoogleAuthenticationController],\n  providers: [GoogleAuthenticationService, GenerateTokenProvider],\n  imports: [\n    ConfigModule.forFeature(googleConfig),\n    ConfigModule.forFeature(jwtConfig),\n    MongooseModule.forFeature([\n      {\n        name: User.name,\n        schema: UserSchema,\n      },\n    ]),\n    JwtAuthModule,\n  ],\n})\nexport class GoogleAuthenticationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GoogleAuthenticationService.html":{"url":"injectables/GoogleAuthenticationService.html","title":"injectable - GoogleAuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GoogleAuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/google-authentication.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                oauthClient\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                authenticate\n                            \n                            \n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(googleConfiguration: ConfigType<>, userModel: Model, generateToken: GenerateTokenProvider)\n                    \n                \n                        \n                            \n                                Defined in src/auth/google-authentication.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        googleConfiguration\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        generateToken\n                                                  \n                                                        \n                                                                        GenerateTokenProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        authenticate\n                        \n                    \n                \n            \n            \n                \n                        \n                    authenticate(undefined: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/google-authentication.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \nonModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/google-authentication.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        oauthClient\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OAuth2Client\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/google-authentication.service.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  forwardRef,\n  Inject,\n  Injectable,\n  OnModuleInit,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { ConfigType } from '@nestjs/config';\nimport { OAuth2Client } from 'google-auth-library';\nimport { GoogleTokenDto } from './dtos/google-token.dto';\nimport googleConfig from 'src/config/google.config';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { User } from './entities/user.entity';\nimport { Model } from 'mongoose';\nimport { GenerateTokenProvider } from './provider/generate-token.provider';\n\n@Injectable()\nexport class GoogleAuthenticationService implements OnModuleInit {\n  private oauthClient: OAuth2Client;\n\n  constructor(\n    // injecting google-config as well as jwt configuration\n\n    @Inject(googleConfig.KEY)\n    private googleConfiguration: ConfigType,\n\n    @InjectModel(User.name)\n    private readonly userModel: Model,\n\n    private readonly generateToken: GenerateTokenProvider,\n  ) {}\n\n  onModuleInit() {\n    const clientId = this.googleConfiguration.googleClientId;\n    const clientSecret = this.googleConfiguration.googleClientSecret;\n\n    this.oauthClient = new OAuth2Client({\n      clientId,\n      clientSecret,\n      redirectUri: this.googleConfiguration.googleRedirectUri,\n    });\n  }\n\n  public async authenticate({ token }: { token: GoogleTokenDto }) {\n    try {\n      // verify token\n      const loginTicket = await this.oauthClient.verifyIdToken({\n        idToken: token.access_token,\n      });\n\n      // extract payload from token\n      const payload = loginTicket.getPayload();\n      const { sub: googleId, email, given_name, family_name } = payload;\n\n      const existingUser = await this.userModel.findOne({\n        googleId: googleId,\n      });\n\n      if (existingUser) {\n        return this.generateToken.generateTokens({ user: existingUser });\n      }\n\n      const user = await this.userModel.create({\n        googleId,\n        email,\n        firstName: given_name,\n        lastName: family_name,\n      });\n\n      return this.generateToken.generateTokens({ user });\n    } catch (error: any) {\n      throw new UnauthorizedException(`${error.message}`, {\n        cause: error.message,\n        description: error,\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GoogleTokenDto.html":{"url":"classes/GoogleTokenDto.html","title":"class - GoogleTokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GoogleTokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dtos/google-token.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                access_token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        access_token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The Google OAuth access token', example: 'ya29.a0AfB_byC...'})@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/google-token.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class GoogleTokenDto {\n  @ApiProperty({\n    description: 'The Google OAuth access token',\n    example: 'ya29.a0AfB_byC...'\n  })\n  @IsNotEmpty()\n  access_token: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JwtAuthModule.html":{"url":"modules/JwtAuthModule.html","title":"module - JwtAuthModule","body":"\n                   \n\n\n\n\n    Modules\n    JwtAuthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/jwt.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JwtModule } from '@nestjs/jwt';\nimport { ConfigModule, ConfigType } from '@nestjs/config';\nimport jwtConfig from '../config/jwt.config';\n\n@Module({\n  imports: [\n    ConfigModule.forFeature(jwtConfig),\n    JwtModule.registerAsync({\n      imports: [ConfigModule.forFeature(jwtConfig)],\n      useFactory: async (jwtConfiguration: ConfigType) => ({\n        secret: jwtConfiguration.jwtSecret,\n        signOptions: {\n          audience: jwtConfiguration.jwtTokenAudience,\n          issuer: jwtConfiguration.jwtTokenIssuer,\n          expiresIn: jwtConfiguration.jwtTokenExpiration,\n        },\n      }),\n      inject: [jwtConfig.KEY],\n    }),\n  ],\n  exports: [JwtModule],\n})\nexport class JwtAuthModule {} \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAiResponseDto.html":{"url":"classes/UpdateAiResponseDto.html","title":"class - UpdateAiResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAiResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ai/dto/update-ai.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateAiResponseDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateAiResponseDto } from './create-ai-response.dto';\nimport { CreateAiSurveyDto } from './create-ai-survey.dto';\n\nexport class UpdateAiResponseDto extends PartialType(CreateAiResponseDto) {}\nexport class UpdateAiSurveyDto extends PartialType(CreateAiSurveyDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAiSurveyDto.html":{"url":"classes/UpdateAiSurveyDto.html","title":"class - UpdateAiSurveyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAiSurveyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ai/dto/update-ai.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateAiSurveyDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateAiResponseDto } from './create-ai-response.dto';\nimport { CreateAiSurveyDto } from './create-ai-survey.dto';\n\nexport class UpdateAiResponseDto extends PartialType(CreateAiResponseDto) {}\nexport class UpdateAiSurveyDto extends PartialType(CreateAiSurveyDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/entities/user.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                firstName\n                            \n                            \n                                    \n                                    \n                                googleId\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                lastName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The email address of the user', example: 'john.doe@example.com'})@Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/user.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The first name of the user', example: 'John'})@Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/user.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        googleId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The unique Google ID of the user', example: '123456789'})@Prop({type: String, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/user.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The last name of the user', example: 'Doe', required: false})@Prop({type: String, default: ''})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/entities/user.entity.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document, HydratedDocument } from 'mongoose';\nimport { ApiProperty } from '@nestjs/swagger';\n\n@Schema()\nexport class User extends Document {\n  @ApiProperty({\n    description: 'The unique Google ID of the user',\n    example: '123456789'\n  })\n  @Prop({\n    type: String,\n    required: true,\n  })\n  googleId: string;\n\n  @ApiProperty({\n    description: 'The first name of the user',\n    example: 'John'\n  })\n  @Prop({\n    type: String,\n    required: true,\n  })\n  firstName: string;\n\n  @ApiProperty({\n    description: 'The last name of the user',\n    example: 'Doe',\n    required: false\n  })\n  @Prop({\n    type: String,\n    default: '',\n  })\n  lastName?: string;\n\n  @ApiProperty({\n    description: 'The email address of the user',\n    example: 'john.doe@example.com'\n  })\n  @Prop({\n    type: String,\n    required: true,\n  })\n  email: string;\n}\n\nexport type UserDocument = HydratedDocument;\n\nexport const UserSchema = SchemaFactory.createForClass(User);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/ai/ai.controller.ts\n            \n            controller\n            AiController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/ai/ai.service.ts\n            \n            injectable\n            AiService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/ai/dto/create-ai-response.dto.ts\n            \n            class\n            CreateAiResponseDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/ai/dto/create-ai-survey.dto.ts\n            \n            class\n            CreateAiSurveyDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/ai/dto/update-ai.dto.ts\n            \n            class\n            UpdateAiResponseDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/ai/dto/update-ai.dto.ts\n            \n            class\n            UpdateAiSurveyDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/ai/entities/ai-response.entity.ts\n            \n            class\n            AiResponse\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/ai/entities/ai-response.entity.ts\n            \n            variable\n            AiResponseSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/ai/entities/ai-response.entity.ts\n            \n            type alias\n            AiResponseDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/ai/entities/ai-survey.entity.ts\n            \n            class\n            AiSurvey\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                        src/ai/entities/ai-survey.entity.ts\n            \n            variable\n            AiSurveySchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/ai/entities/ai-survey.entity.ts\n            \n            type alias\n            AiSurveyDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/ai/generate-questions/generate-questions.ts\n            \n            injectable\n            GenerateQuestions\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app.module.ts\n            \n            variable\n            ENV\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/auth/decorators/active-user.decorator.ts\n            \n            variable\n            ActiveUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/auth/decorators/auth.decorator.ts\n            \n            variable\n            Auth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/auth/decorators/auth.decorator.ts\n            \n            variable\n            AUTH_TYPE_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/dtos/google-token.dto.ts\n            \n            class\n            GoogleTokenDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/auth/entities/user.entity.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/auth/entities/user.entity.ts\n            \n            type alias\n            UserDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/google-authentication.controller.ts\n            \n            controller\n            GoogleAuthenticationController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/google-authentication.service.ts\n            \n            injectable\n            GoogleAuthenticationService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/guards/access-token/access-token.guard.ts\n            \n            guard\n            AccessTokenGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/auth/guards/access-token/access-token.guard.ts\n            \n            variable\n            REQUEST_USER_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/auth/guards/access-token/access-token.guard.ts\n            \n            type alias\n            UserPayload\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/guards/authentication/authentication.guard.ts\n            \n            guard\n            AuthenticationGuard\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/provider/generate-token.provider.ts\n            \n            injectable\n            GenerateTokenProvider\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @anthropic-ai/sdk : ^0.39.0\n        \n            @compodoc/compodoc : ^1.1.26\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^4.0.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^11.0.0\n        \n            @nestjs/mapped-types : ^2.0.6\n        \n            @nestjs/mongoose : ^10.1.0\n        \n            @nestjs/platform-express : ^10.4.15\n        \n            @nestjs/swagger : ^8.1.0\n        \n            @nestjs/typeorm : ^10.0.2\n        \n            axios : ^1.8.4\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            google-auth-library : ^9.15.1\n        \n            joi : ^17.13.3\n        \n            mongoose : ^8.9.3\n        \n            openai : ^4.89.0\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n        \n            typeorm : ^0.3.20\n        \n            uuid : ^11.0.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthType   (src/.../auth.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/decorators/auth.decorator.ts\n    \n        \n            \n                \n                    \n                        \n                        AuthType\n                    \n                \n                        \n                            \n                                 BEARER\n                            \n                        \n                        \n                            \n                                Value : bearer\n                            \n                        \n                        \n                            \n                                 NONE\n                            \n                        \n                        \n                            \n                                Value : none\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nREST API\nDescription\nA REST API built with Nest for managing AI-powered surveys and responses. This API provides endpoints for generating AI-powered survey questions, collecting responses, and managing user authentication through Google OAuth.\nFeatures\n\nAI-Powered Survey Generation\nGenerate survey questions based on titles\nGet AI-suggested survey titles\nCollect and manage survey responses\n\n\nAuthentication\nGoogle OAuth integration\nJWT-based authentication\nProtected routes\n\n\nData Management\nMongoDB integration\nMongoose schemas\nData validation\n\n\nAPI Documentation\nSwagger UI integration\nDetailed endpoint documentation\nRequest/response examples\nInteractive testing interface\n\n\n\nDocumentation\nAPI Documentation (Swagger)\n\nLocal URL: http://localhost:8888/api\nProduction URL: https://cytric-backend-ocff.onrender.com/api\nInteractive API documentation with request/response examples\nTest endpoints directly from the browser\nAuthentication flow documentation\nSchema definitions and examples\n\nTechnical Documentation (Compodoc)\n\nURL: http://localhost:8889\nDetailed technical documentation of the codebase\nClass and component relationships\nProject architecture overview\nDependency injection patterns\nService implementations\n\nInstallation\nExample :$ pnpm installRunning the app\nExample :# development\n$ pnpm run start\n\n# watch mode\n$ pnpm run start:dev\n\n# production mode\n$ pnpm run start:prodTest\nExample :# unit tests\n$ pnpm run test\n\n# e2e tests\n$ pnpm run test:e2e\n\n# test coverage\n$ pnpm run test:covGenerate Documentation\nExample :# Generate Compodoc documentation\n$ pnpm run compodoc\n\n# Serve Compodoc documentation\n$ pnpm run compodoc:serveAPI Endpoints\nAuthentication\n\nPOST /google-authentication - Authenticate with Google OAuth\n\nAI Survey Management\n\nPOST /ai/generate-questions - Generate AI-powered survey questions\nPOST /ai/respond-to-question - Submit responses to survey questions\nGET /ai/suggest-titles - Get AI-suggested survey titles\n\nStay in touch\n\nAuthor - Joseph\nWebsite - https://github.com/oojoseph67\n\nLicense\nThis project is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AiModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GoogleAuthenticationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JwtAuthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AiModule\n\n\n\ncluster_AiModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_GoogleAuthenticationModule\n\n\n\ncluster_GoogleAuthenticationModule_providers\n\n\n\n\nAiService\n\nAiService\n\n\n\nAiModule\n\nAiModule\n\nAiModule -->\n\nAiService->AiModule\n\n\n\n\n\nGenerateQuestions\n\nGenerateQuestions\n\nAiModule -->\n\nGenerateQuestions->AiModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAiModule->AppModule\n\n\n\n\n\nGoogleAuthenticationModule\n\nGoogleAuthenticationModule\n\nAppModule -->\n\nGoogleAuthenticationModule->AppModule\n\n\n\n\n\nJwtAuthModule\n\nJwtAuthModule\n\nGoogleAuthenticationModule -->\n\nJwtAuthModule->GoogleAuthenticationModule\n\n\n\nAppModule -->\n\nJwtAuthModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nGenerateTokenProvider\n\nGenerateTokenProvider\n\nGoogleAuthenticationModule -->\n\nGenerateTokenProvider->GoogleAuthenticationModule\n\n\n\n\n\nGoogleAuthenticationService\n\nGoogleAuthenticationService\n\nGoogleAuthenticationModule -->\n\nGoogleAuthenticationService->GoogleAuthenticationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    8 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AiResponseDocument   (src/.../ai-response.entity.ts)\n                        \n                        \n                            AiSurveyDocument   (src/.../ai-survey.entity.ts)\n                        \n                        \n                            UserDocument   (src/.../user.entity.ts)\n                        \n                        \n                            UserPayload   (src/.../access-token.guard.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/ai/entities/ai-response.entity.ts\n    \n    \n        \n            \n                \n                    \n                    AiResponseDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/ai/entities/ai-survey.entity.ts\n    \n    \n        \n            \n                \n                    \n                    AiSurveyDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/auth/entities/user.entity.ts\n    \n    \n        \n            \n                \n                    \n                    UserDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/auth/guards/access-token/access-token.guard.ts\n    \n    \n        \n            \n                \n                    \n                    UserPayload\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActiveUser   (src/.../active-user.decorator.ts)\n                        \n                        \n                            AiResponseSchema   (src/.../ai-response.entity.ts)\n                        \n                        \n                            AiSurveySchema   (src/.../ai-survey.entity.ts)\n                        \n                        \n                            Auth   (src/.../auth.decorator.ts)\n                        \n                        \n                            AUTH_TYPE_KEY   (src/.../auth.decorator.ts)\n                        \n                        \n                            ENV   (src/.../app.module.ts)\n                        \n                        \n                            REQUEST_USER_KEY   (src/.../access-token.guard.ts)\n                        \n                        \n                            UserSchema   (src/.../user.entity.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/decorators/active-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ActiveUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (field: keyof UserPayload | undefined, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    const user: UserPayload = request[REQUEST_USER_KEY];\n\n    if (field) {\n      return user[field];\n    } else {\n      return user;\n    }\n  },\n)\n                    \n                \n\n\n        \n    \n\n    src/ai/entities/ai-response.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AiResponseSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(AiResponse)\n                    \n                \n\n\n        \n    \n\n    src/ai/entities/ai-survey.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AiSurveySchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(AiSurvey)\n                    \n                \n\n\n        \n    \n\n    src/auth/decorators/auth.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Auth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...authTypes: AuthType[]) => SetMetadata(AUTH_TYPE_KEY, authTypes)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AUTH_TYPE_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'authType'\n                    \n                \n\n\n        \n    \n\n    src/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ENV\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.NODE_ENV || 'development'\n                    \n                \n\n\n        \n    \n\n    src/auth/guards/access-token/access-token.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        REQUEST_USER_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n\n\n        \n    \n\n    src/auth/entities/user.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(User)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
